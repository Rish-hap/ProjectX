{"ast":null,"code":"var _jsxFileName = \"/home/ajoncode/Rish-hap/ProjectX/src/App.js\";\nimport React, { useEffect } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport './sass/main.scss';\nimport 'antd/dist/antd.css';\nimport Home from \"./Containers/Home\";\nimport Farming from \"./Containers/Farming\";\nimport Reward from \"./Containers/Reward\";\nimport Staking from \"./Containers/Staking\";\nimport { Route, Switch, Redirect, BrowserRouter as Router } from 'react-router-dom';\nimport Header from \"./Components/Header\";\nimport fessABI from './utils/fessABI';\nimport fnirABI from './utils/fnirABI';\nimport { contractDeployedNetwork, fessContractAddress, fnirContractAddress } from './utils/config';\nimport { TIMEOUT, NOT_INSTALLED, LOCKED } from './metamask/constants';\nimport styled from 'styled-components';\nimport { ImWarning } from 'react-icons/im';\nimport { GiCrossMark } from 'react-icons/gi';\nimport { MetamaskProvider } from './contexts/metamask';\n\nfunction App(props) {\n  const [metamaskContextValue, setMetamaskContextValue] = React.useState({\n    ethereumAddress: null,\n    fessContractInstance: null,\n    fnirContractInstance: null,\n    web3Instance: null,\n    metamaskError: null\n  });\n  const [fnirBalance, setFnirBalance] = React.useState(0);\n  const [fnirTotalSupply, setFnirTotalSupply] = React.useState(0);\n  const [fessBalance, setFessBalance] = React.useState(0);\n  const [networkError, setNetworkError] = React.useState(false);\n  const chainedWeb3 = window.ethereum;\n\n  if (chainedWeb3) {\n    chainedWeb3.on('networkChanged', networkId => {\n      console.log('networkChanged -> networkId -> ', networkId); // handle the new network\n\n      resetApp();\n      window.location.reload();\n    });\n    chainedWeb3.on('accountsChanged', account => {\n      console.log('accountsChanged -> account -> ', account); // handle the new account\n\n      resetApp();\n    });\n  }\n\n  const resetApp = async (metamaskError = null) => {\n    if (metamaskContextValue.web3Instance && metamaskContextValue.web3Instance.currentProvider && metamaskContextValue.web3Instance.currentProvider.close) {\n      await metamaskContextValue.web3Instance.currentProvider.close();\n    }\n\n    setMetamaskContextValue({\n      ethereumAddress: null,\n      fessContractInstance: null,\n      fnirContractInstance: null,\n      web3Instance: null,\n      metamaskError\n    });\n  };\n\n  const loadBlockChain = async () => {\n    const error = typeof window !== 'undefined' && Boolean(window.ethereum || window.web3);\n    error ? console.log('NO ERROR') : resetApp(NOT_INSTALLED);\n\n    try {\n      window.web3 = new window.Web3(window.ethereum);\n      await window.ethereum.enable();\n      const web3 = await new Web3(window.web3.currentProvider);\n      const network = await web3.eth.net.getNetworkType();\n      console.log('Network: ', network);\n\n      if (network === contractDeployedNetwork.toLowerCase()) {\n        console.log('web3: ', web3);\n        const accounts = await web3.eth.getAccounts();\n        const contractFESS = new web3.eth.Contract(fessABI, fessContractAddress);\n        const contractFNIR = new web3.eth.Contract(fnirABI, fnirContractAddress);\n        setMetamaskContextValue({ ...metamaskContextValue,\n          ethereumAddress: accounts[0],\n          fessContractInstance: contractFESS,\n          fnirContractInstance: contractFNIR,\n          web3Instance: web3\n        });\n        setNetworkError(false);\n      } else {\n        setNetworkError(true);\n        resetApp(`Please switch your metamask network to ${contractDeployedNetwork.toUpperCase()}`);\n      }\n    } catch (err) {\n      console.log('error catch: ', err);\n    }\n  };\n\n  const handleConnectMetamask = () => {\n    loadBlockChain();\n  };\n\n  React.useEffect(() => {\n    handleConnectMetamask();\n  }, []);\n\n  const authObject = () => {\n    return {\n      isAuthenticated: !!localStorage.getItem('token')\n    };\n  };\n\n  const getFnirBalance = async () => {\n    try {\n      const fnirBalanceValue = await metamaskContextValue.fnirContractInstance.methods.balanceOf(metamaskContextValue.ethereumAddress).call();\n      setFnirBalance((Number(fnirBalanceValue) / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 4\n      }));\n      console.log('getFnirBalance: fnirBalanceValue: ', fnirBalanceValue);\n    } catch (err) {\n      console.log('Farming -> getFnirBalance: err: ', err);\n    }\n  };\n\n  const getFnirTotalSupply = async () => {\n    try {\n      const totalSupply = await metamaskContextValue.fnirContractInstance.methods.totalSupply().call();\n      setFnirTotalSupply((Number(totalSupply) / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 4\n      }));\n      console.log('getFnirTotalSupply: totalSupply: ', totalSupply);\n    } catch (err) {\n      console.log('Farming -> getFnirTotalSupply: err: ', err);\n    }\n  };\n\n  const getFessBalance = async () => {\n    try {\n      const fessBalanceValue = await metamaskContextValue.fessContractInstance.methods.balanceOf(metamaskContextValue.ethereumAddress).call();\n      setFessBalance((Number(fessBalanceValue) / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 4\n      }));\n      console.log('fessBalanceValue: ', fessBalanceValue);\n    } catch (err) {\n      console.log('Farming -> getFessBalance: err: ', err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (metamaskContextValue.fessContractInstance && metamaskContextValue.fnirContractInstance) {\n      getFnirBalance();\n      getFnirTotalSupply();\n      getFessBalance();\n    }\n  }, [metamaskContextValue.fessContractInstance, metamaskContextValue.fnirContractInstance]);\n  console.log('metamaskContextValue: ', metamaskContextValue);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: networkError ? 'PhishAlertActive' : 'PhishAlert',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ImWarning, {\n    style: {\n      marginRight: 6\n    },\n    size: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"alertSpan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, \"Make sure the Metamask Network is\", ' ', contractDeployedNetwork.toUpperCase())), /*#__PURE__*/React.createElement(StyledClose, {\n    size: 15,\n    onClick: () => setNetworkError(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(MetamaskProvider, {\n    value: metamaskContextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    ethereumAddress: metamaskContextValue.ethereumAddress,\n    handleConnectMetamask: handleConnectMetamask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Redirect, {\n    exact: true,\n    from: \"/\",\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/home\",\n    component: () => /*#__PURE__*/React.createElement(Home, {\n      fnirBalance: fnirBalance,\n      fnirTotalSupply: fnirTotalSupply,\n      fessBalance: fessBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 51\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/farming\",\n    component: () => /*#__PURE__*/React.createElement(Farming, {\n      fnirBalance: fnirBalance,\n      getFnirBalance: getFnirBalance,\n      fessBalance: fessBalance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 53\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/reward\",\n    component: () => /*#__PURE__*/React.createElement(Reward, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/staking\",\n    component: () => /*#__PURE__*/React.createElement(Staking, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 53\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  })))));\n}\n\nconst mapStateToProps = state => ({\n  user: state\n});\n\nexport default App;\nexport const StyledClose = styled(GiCrossMark)`\n  :hover {\n    cursor: pointer;\n  }\n`;","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/App.js"],"names":["React","useEffect","Web3","Home","Farming","Reward","Staking","Route","Switch","Redirect","BrowserRouter","Router","Header","fessABI","fnirABI","contractDeployedNetwork","fessContractAddress","fnirContractAddress","TIMEOUT","NOT_INSTALLED","LOCKED","styled","ImWarning","GiCrossMark","MetamaskProvider","App","props","metamaskContextValue","setMetamaskContextValue","useState","ethereumAddress","fessContractInstance","fnirContractInstance","web3Instance","metamaskError","fnirBalance","setFnirBalance","fnirTotalSupply","setFnirTotalSupply","fessBalance","setFessBalance","networkError","setNetworkError","chainedWeb3","window","ethereum","on","networkId","console","log","resetApp","location","reload","account","currentProvider","close","loadBlockChain","error","Boolean","web3","enable","network","eth","net","getNetworkType","toLowerCase","accounts","getAccounts","contractFESS","Contract","contractFNIR","toUpperCase","err","handleConnectMetamask","authObject","isAuthenticated","localStorage","getItem","getFnirBalance","fnirBalanceValue","methods","balanceOf","call","Number","Math","pow","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","getFnirTotalSupply","totalSupply","getFessBalance","fessBalanceValue","display","marginRight","mapStateToProps","state","user","StyledClose"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Web3 from 'web3';\n\nimport './App.css';\nimport './sass/main.scss';\nimport 'antd/dist/antd.css';\nimport Home from \"./Containers/Home\"\nimport Farming from \"./Containers/Farming\"\nimport Reward from \"./Containers/Reward\"\nimport Staking from \"./Containers/Staking\"\nimport {  Route, Switch, Redirect,  BrowserRouter as Router } from 'react-router-dom'\nimport Header from \"./Components/Header\"\nimport fessABI from './utils/fessABI';\nimport fnirABI from './utils/fnirABI';\nimport {\n  contractDeployedNetwork,\n  fessContractAddress,\n  fnirContractAddress\n} from './utils/config';\nimport { TIMEOUT, NOT_INSTALLED, LOCKED } from './metamask/constants';\n\nimport styled from 'styled-components';\n\nimport { ImWarning } from 'react-icons/im';\nimport { GiCrossMark } from 'react-icons/gi';\n\nimport { MetamaskProvider } from './contexts/metamask';\n\nfunction App(props) {\n  const [metamaskContextValue, setMetamaskContextValue] = React.useState({\n    ethereumAddress: null,\n    fessContractInstance: null,\n    fnirContractInstance: null,\n    web3Instance: null,\n    metamaskError: null,\n  });\n\n  const [fnirBalance, setFnirBalance] = React.useState(0);\n  const [fnirTotalSupply, setFnirTotalSupply] = React.useState(0);\n  const [fessBalance, setFessBalance] = React.useState(0);\n\n  const [networkError, setNetworkError] = React.useState(false);\n  const chainedWeb3 = window.ethereum;\n\n  if (chainedWeb3) {\n    chainedWeb3.on('networkChanged', networkId => {\n      console.log('networkChanged -> networkId -> ', networkId);\n      // handle the new network\n      resetApp();\n      window.location.reload();\n    });\n\n    chainedWeb3.on('accountsChanged', account => {\n      console.log('accountsChanged -> account -> ', account);\n      // handle the new account\n      resetApp();\n    });\n  }\n\n  const resetApp = async (metamaskError = null) => {\n    if (\n      metamaskContextValue.web3Instance &&\n      metamaskContextValue.web3Instance.currentProvider &&\n      metamaskContextValue.web3Instance.currentProvider.close\n    ) {\n      await metamaskContextValue.web3Instance.currentProvider.close();\n    }\n    setMetamaskContextValue({\n      ethereumAddress: null,\n      fessContractInstance: null,\n      fnirContractInstance: null,\n      web3Instance: null,\n      metamaskError,\n    });\n  };\n\n\n\n  const loadBlockChain = async () => {\n    const error =\n      typeof window !== 'undefined' && Boolean(window.ethereum || window.web3);\n\n    error ? console.log('NO ERROR') : resetApp(NOT_INSTALLED);\n\n    try {\n      window.web3 = new window.Web3(window.ethereum);\n      await window.ethereum.enable();\n      const web3 = await new Web3(window.web3.currentProvider);\n      const network = await web3.eth.net.getNetworkType();\n      console.log('Network: ', network);\n\n      if (network === contractDeployedNetwork.toLowerCase()) {\n        console.log('web3: ', web3);\n        const accounts = await web3.eth.getAccounts();\n        const contractFESS = new web3.eth.Contract(\n          fessABI,\n          fessContractAddress,\n        );\n\n        const contractFNIR = new web3.eth.Contract(\n          fnirABI,\n          fnirContractAddress,\n        );\n\n\n        setMetamaskContextValue({\n          ...metamaskContextValue,\n          ethereumAddress: accounts[0],\n          fessContractInstance: contractFESS,\n          fnirContractInstance: contractFNIR,\n          web3Instance: web3,\n        });\n        setNetworkError(false);\n      } else {\n        setNetworkError(true);\n        resetApp(\n          `Please switch your metamask network to ${contractDeployedNetwork.toUpperCase()}`,\n        );\n      }\n    } catch (err) {\n      console.log('error catch: ', err);\n    }\n  };\n\n  const handleConnectMetamask = () => {\n    loadBlockChain();\n  };\n\n  React.useEffect(() => {\n    handleConnectMetamask()\n  }, []);\n\n\n  const authObject =()=> {\n    return {\n     isAuthenticated: !!localStorage.getItem('token')\n    }\n }\n\n const getFnirBalance = async () => {\n  try {\n    const fnirBalanceValue = await metamaskContextValue.fnirContractInstance.methods\n      .balanceOf(\n        metamaskContextValue.ethereumAddress\n      )\n      .call();\n\n      setFnirBalance((\n        Number(fnirBalanceValue) / Math.pow(10, 18)\n      ).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 4,\n      }))\n\n      console.log('getFnirBalance: fnirBalanceValue: ', fnirBalanceValue)\n  } catch (err) {\n    console.log('Farming -> getFnirBalance: err: ', err);\n  }\n}\n\nconst getFnirTotalSupply = async () => {\n  try {\n    const totalSupply = await metamaskContextValue.fnirContractInstance.methods\n      .totalSupply()\n      .call();\n\n      setFnirTotalSupply((\n        Number(totalSupply) / Math.pow(10, 18)\n      ).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 4,\n      }))\n\n      console.log('getFnirTotalSupply: totalSupply: ', totalSupply)\n  } catch (err) {\n    console.log('Farming -> getFnirTotalSupply: err: ', err);\n  }\n}\n\nconst getFessBalance = async () => {\n  try {\n    const fessBalanceValue = await metamaskContextValue.fessContractInstance.methods\n      .balanceOf(\n        metamaskContextValue.ethereumAddress\n      )\n      .call();\n\n      setFessBalance((\n        Number(fessBalanceValue) / Math.pow(10, 18)\n      ).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 4,\n      }))\n\n      console.log('fessBalanceValue: ', fessBalanceValue)\n  } catch (err) {\n    console.log('Farming -> getFessBalance: err: ', err);\n  }\n}\n\n React.useEffect(() => {\n  if (\n    metamaskContextValue.fessContractInstance &&\n    metamaskContextValue.fnirContractInstance\n  ) {\n  getFnirBalance();\n  getFnirTotalSupply();\n  getFessBalance();\n  }\n}, [metamaskContextValue.fessContractInstance,\n  metamaskContextValue.fnirContractInstance])\n\n console.log('metamaskContextValue: ', metamaskContextValue)\n  return (\n      <React.Fragment>\n         <div className={networkError ? 'PhishAlertActive' : 'PhishAlert'}>\n            <div style={{ display: 'flex' }}>\n              <ImWarning style={{ marginRight: 6 }} size={15} />\n              <span className=\"alertSpan\">\n                Make sure the Metamask Network is{' '}\n                {contractDeployedNetwork.toUpperCase()}\n              </span>\n            </div>\n            <StyledClose size={15} onClick={() => setNetworkError(false)} />\n          </div>\n        <MetamaskProvider value={metamaskContextValue}>\n         <Router>\n         <Header ethereumAddress={metamaskContextValue.ethereumAddress} handleConnectMetamask={handleConnectMetamask}/>\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/home\" />\n            <Route  path =\"/home\" component={()=> <Home  fnirBalance={fnirBalance} fnirTotalSupply={fnirTotalSupply} fessBalance={fessBalance}/>}/>\n            <Route  path =\"/farming\" component={()=><Farming fnirBalance={fnirBalance} getFnirBalance={getFnirBalance} fessBalance={fessBalance} />}/>\n            <Route  path =\"/reward\" component={()=><Reward />}/>\n            <Route  path =\"/staking\" component={()=><Staking />}/>\n          </Switch>\n      </Router>\n      </MetamaskProvider>\n      </React.Fragment>\n  )\n\n}\n\nconst mapStateToProps = state => ({\n  user: state\n})\n\nexport default App\n\nexport const StyledClose = styled(GiCrossMark)`\n  :hover {\n    cursor: pointer;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}