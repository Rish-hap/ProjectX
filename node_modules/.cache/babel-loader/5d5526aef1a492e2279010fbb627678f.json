{"ast":null,"code":"import _regeneratorRuntime from\"/home/ajoncode/Rish-hap/ProjectX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(global_error_saga);import{call,put,takeEvery,takeLatest}from'redux-saga/effects';import{GLOBAL_ERROR}from'../Constants';import{global_error_ret,global_error_clr}from'../actions/global';import api from'../utils/api_routes';import{get_url_params}from\"../utils/common_utilities\";import store from'../store';// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction global_error_saga(){var data,headers;return _regeneratorRuntime.wrap(function global_error_saga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return store.getState().global_store.global_error;case 3:data=_context.sent;headers={'headers':{'Authorization':localStorage.getItem('token')}};_context.next=7;return put(global_error_ret({success:data.success,message:data.message,heading:data.heading,data:data.data}));case 7:_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0.response,\"e in global_error_saga\");case 12:case\"end\":return _context.stop();}}},_marked,null,[[0,9]]);}export var global_saga=[takeLatest(GLOBAL_ERROR,global_error_saga)];export default global_saga;","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/Sagas/global_saga.js"],"names":["global_error_saga","call","put","takeEvery","takeLatest","GLOBAL_ERROR","global_error_ret","global_error_clr","api","get_url_params","store","getState","global_store","global_error","data","headers","localStorage","getItem","success","message","heading","console","log","response","global_saga"],"mappings":"gMAQUA,iB,EARV,OAASC,IAAT,CAAeC,GAAf,CAAoBC,SAApB,CAA+BC,UAA/B,KAAiD,oBAAjD,CACA,OAAWC,YAAX,KAA+B,cAA/B,CACA,OAASC,gBAAT,CAA2BC,gBAA3B,KAAmD,mBAAnD,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,OAASC,cAAT,KAA+B,2BAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CAEA;AACA,QAAUV,CAAAA,iBAAV,8KAGoB,MAAMU,CAAAA,KAAK,CAACC,QAAN,GAAiBC,YAAjB,CAA8BC,YAApC,CAHpB,OAGaC,IAHb,eAIYC,OAJZ,CAIuB,CAAE,UAAW,CAAE,gBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnB,CAAb,CAJvB,iBAMM,MAAMf,CAAAA,GAAG,CAACI,gBAAgB,CAAC,CACzBY,OAAO,CAACJ,IAAI,CAACI,OADY,CAEzBC,OAAO,CAACL,IAAI,CAACK,OAFY,CAGzBC,OAAO,CAACN,IAAI,CAACM,OAHY,CAIzBN,IAAI,CAACA,IAAI,CAACA,IAJe,CAAD,CAAjB,CAAT,CANN,sFAaIO,OAAO,CAACC,GAAR,CAAY,YAAEC,QAAd,CAAuB,wBAAvB,EAbJ,oEAiBA,MAAO,IAAMC,CAAAA,WAAW,CAAG,CACxBpB,UAAU,CAACC,YAAD,CAAeL,iBAAf,CADc,CAApB,CAIP,cAAewB,CAAAA,WAAf","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects'\nimport {   GLOBAL_ERROR } from '../Constants'\nimport { global_error_ret, global_error_clr } from '../actions/global'\nimport api from '../utils/api_routes'\nimport { get_url_params } from \"../utils/common_utilities\"\nimport store from '../store'\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* global_error_saga() {\n\n   try {\n      const  data = yield store.getState().global_store.global_error\n      const headers  = { 'headers': { 'Authorization': localStorage.getItem('token') } }\n     \n      yield put(global_error_ret({\n        success:data.success,\n        message:data.message,\n        heading:data.heading,\n        data:data.data\n       }))\n   } catch (e) {\n    console.log(e.response,\"e in global_error_saga\")\n   }\n}\n\nexport const global_saga = [\n   takeLatest(GLOBAL_ERROR, global_error_saga)\n]\n\nexport default global_saga"]},"metadata":{},"sourceType":"module"}