{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport rootSaga from \"./Sagas/index.js\";\nimport { logout } from \"./actions/Auth\";\nimport { LOGOUT } from \"./Constants\";\nconst initialState = {};\nconst sagaMiddleware = createSagaMiddleware();\n\nconst invalidTokenMiddleWare = store => next => action => {\n  if (true) {\n    if (!!action.payload) {\n      if (!!(action.data.message === \"Please authenticate\")) {\n        store.dispatch({\n          type: LOGOUT\n        });\n        next(logout);\n      } else {\n        next(action);\n      }\n    } else if (!!action.data) {\n      if (!!(action.data.message === \"Please authenticate\")) {\n        store.dispatch({\n          type: LOGOUT\n        });\n        next(logout());\n      } else {\n        next(action);\n      }\n    } else {\n      next(action);\n    }\n  } else {\n    next(action);\n  }\n};\n\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(sagaMiddleware, invalidTokenMiddleWare))); // then run the saga\n\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/store.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","rootReducer","rootSaga","logout","LOGOUT","initialState","sagaMiddleware","invalidTokenMiddleWare","store","next","action","payload","data","message","dispatch","type","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAAUC,MAAV,QAAwB,gBAAxB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,cAAc,GAAGN,oBAAoB,EAA3C;;AAEA,MAAMO,sBAAsB,GAAGC,KAAK,IAAGC,IAAI,IAAGC,MAAM,IAAE;AACpD,MAAG,IAAH,EAAQ;AACJ,QAAG,CAAC,CAACA,MAAM,CAACC,OAAZ,EAAoB;AACjB,UAAI,CAAC,EAAED,MAAM,CAACE,IAAP,CAAYC,OAAZ,KAAsB,qBAAxB,CAAL,EACC;AACIL,QAAAA,KAAK,CAACM,QAAN,CAAe;AACbC,UAAAA,IAAI,EAACX;AADQ,SAAf;AAGAK,QAAAA,IAAI,CAACN,MAAD,CAAJ;AACH,OANF,MAMM;AACGM,QAAAA,IAAI,CAACC,MAAD,CAAJ;AACP;AACJ,KAVD,MAUM,IAAG,CAAC,CAACA,MAAM,CAACE,IAAZ,EAAiB;AACnB,UAAI,CAAC,EAAEF,MAAM,CAACE,IAAP,CAAYC,OAAZ,KAAsB,qBAAxB,CAAL,EACA;AACEL,QAAAA,KAAK,CAACM,QAAN,CAAe;AACbC,UAAAA,IAAI,EAACX;AADQ,SAAf;AAGAK,QAAAA,IAAI,CAACN,MAAM,EAAP,CAAJ;AACD,OAND,MAMK;AACGM,QAAAA,IAAI,CAACC,MAAD,CAAJ;AACP;AACJ,KAVK,MAUD;AACDD,MAAAA,IAAI,CAACC,MAAD,CAAJ;AACH;AACJ,GAxBD,MAwBK;AACDD,IAAAA,IAAI,CAACC,MAAD,CAAJ;AACH;AAEF,CA7BD;;AA8BA,MAAMF,KAAK,GAAGX,WAAW,CACvBI,WADuB,EAEvBI,YAFuB,EAGvBN,OAAO,CACLD,eAAe,CAACQ,cAAD,EAAiBC,sBAAjB,CADV,CAHgB,CAAzB,C,CAQA;;AACAD,cAAc,CAACU,GAAf,CAAmBd,QAAnB;AAGA,eAAeM,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers';\nimport rootSaga from \"./Sagas/index.js\"\nimport  { logout } from \"./actions/Auth\"\nimport { LOGOUT } from \"./Constants\"\nconst initialState = {};\nconst sagaMiddleware = createSagaMiddleware()\n\nconst invalidTokenMiddleWare = store=> next=> action=>{\n  if(true){\n      if(!!action.payload){\n         if((!!(action.data.message===\"Please authenticate\") ))\n          {\n              store.dispatch({\n                type:LOGOUT\n              })\n              next(logout)\n          }else{\n                  next(action)\n          }\n      }else if(!!action.data){\n          if((!!(action.data.message===\"Please authenticate\")  ))\n          {\n            store.dispatch({\n              type:LOGOUT\n            })\n            next(logout())\n          }else{\n                  next(action)\n          }\n      }else{\n          next(action);\n      }\n  }else{\n      next(action);\n  }\n\n}\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(sagaMiddleware, invalidTokenMiddleWare),\n  )\n);\n\n// then run the saga\nsagaMiddleware.run(rootSaga)\n\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}