{"ast":null,"code":"var _jsxFileName = \"/home/ajoncode/Rish-hap/ProjectX/src/Containers/Reward.js\";\nimport React from \"react\";\nimport LoginView from \"../Views/HomeView\";\nimport { login, login_loading } from \"../actions/Auth\";\nimport { set_user_data } from \"../actions/user\";\nimport { global_error, global_error_clr } from \"../actions/global\";\nimport { connect } from 'react-redux';\nimport Notif from '../Components/Notif'; // import { ReCaptcha } from 'react-recaptcha-v3'\n\nimport RewardView from \"../Views/RewardView\";\nimport Footer from \"../Components/Footer/Index.js\";\nimport MetamaskContext from '../contexts/metamask';\n\nfunction Reward(props) {\n  const metamaskContextValue = React.useContext(MetamaskContext);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RewardView, {\n    global_error: props.global_error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Notif, {\n    global_error: props.global_error,\n    global_error_ret: props.global_error_ret,\n    global_error_clr: props.global_error_clr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  })));\n}\n\nconst mapStateToProps = state => ({\n  auth_store: state.auth_store,\n  login_ret: state.auth_store.login_ret,\n  login_loading_flag: state.auth_store.login_loading,\n  global_error_ret: state.global_store.global_error_ret\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  login_loading,\n  global_error,\n  global_error_clr,\n  set_user_data\n})(Reward);","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/Containers/Reward.js"],"names":["React","LoginView","login","login_loading","set_user_data","global_error","global_error_clr","connect","Notif","RewardView","Footer","MetamaskContext","Reward","props","metamaskContextValue","useContext","global_error_ret","mapStateToProps","state","auth_store","login_ret","login_loading_flag","global_store"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,iBAArC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,mBAA/C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA,OAAOC,eAAP,MAA4B,sBAA5B;;AAEA,SAASC,MAAT,CAAiBC,KAAjB,EAAwB;AAClB,QAAMC,oBAAoB,GAAGd,KAAK,CAACe,UAAN,CAAiBJ,eAAjB,CAA7B;AACE,sBACK,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAGI,IAAA,YAAY,EAAIE,KAAK,CAACR,YAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,KAAD;AACG,IAAA,YAAY,EAAIQ,KAAK,CAACR,YADzB;AAEG,IAAA,gBAAgB,EAAIQ,KAAK,CAACG,gBAF7B;AAGG,IAAA,gBAAgB,EAAIH,KAAK,CAACP,gBAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADH,CADL;AAkBP;;AAED,MAAMW,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,UAAU,EAAED,KAAK,CAACC,UADc;AAEhCC,EAAAA,SAAS,EAACF,KAAK,CAACC,UAAN,CAAiBC,SAFK;AAGhCC,EAAAA,kBAAkB,EAACH,KAAK,CAACC,UAAN,CAAiBhB,aAHJ;AAIhCa,EAAAA,gBAAgB,EAACE,KAAK,CAACI,YAAN,CAAmBN;AAJJ,CAAL,CAA7B;;AAOA,eAAeT,OAAO,CAACU,eAAD,EAAkB;AACtCf,EAAAA,KADsC;AAEtCC,EAAAA,aAFsC;AAGtCE,EAAAA,YAHsC;AAItCC,EAAAA,gBAJsC;AAKtCF,EAAAA;AALsC,CAAlB,CAAP,CAMXQ,MANW,CAAf","sourcesContent":["import React from \"react\"\nimport LoginView from \"../Views/HomeView\"\nimport { login, login_loading } from \"../actions/Auth\"\nimport { set_user_data } from \"../actions/user\"\nimport { global_error, global_error_clr } from \"../actions/global\"\nimport { connect } from 'react-redux';\nimport Notif from '../Components/Notif'\n// import { ReCaptcha } from 'react-recaptcha-v3'\nimport RewardView from \"../Views/RewardView\"\nimport Footer from \"../Components/Footer/Index.js\"\n\nimport MetamaskContext from '../contexts/metamask';\n\nfunction Reward (props) {\n      const metamaskContextValue = React.useContext(MetamaskContext);\n        return (\n             <React.Fragment>\n                <div >\n                <RewardView\n\n\n                    global_error = {props.global_error}\n                  />\n                  <Footer />\n                  <Notif\n                     global_error = {props.global_error}\n                     global_error_ret = {props.global_error_ret}\n                     global_error_clr = {props.global_error_clr}\n                  />\n                </div>\n             </React.Fragment>\n        )\n\n}\n\nconst mapStateToProps = state => ({\n  auth_store: state.auth_store,\n  login_ret:state.auth_store.login_ret,\n  login_loading_flag:state.auth_store.login_loading,\n  global_error_ret:state.global_store.global_error_ret\n})\n\nexport default connect(mapStateToProps, {\n  login,\n  login_loading,\n  global_error,\n  global_error_clr,\n  set_user_data\n })(Reward)\n"]},"metadata":{},"sourceType":"module"}