{"ast":null,"code":"var _jsxFileName = \"/home/ajoncode/Rish-hap/ProjectX/src/Containers/Farming.js\";\nimport React from \"react\";\nimport LoginView from \"../Views/HomeView\";\nimport { login, login_loading } from \"../actions/Auth\";\nimport { set_user_data } from \"../actions/user\";\nimport { global_error, global_error_clr } from \"../actions/global\";\nimport { connect } from 'react-redux';\nimport Notif from '../Components/Notif'; // import { ReCaptcha } from 'react-recaptcha-v3'\n\nimport FarmingView from \"../Views/FarmingView\";\nimport Footer from \"../Components/Footer/Index.js\";\nimport MetamaskContext from '../contexts/metamask';\nimport { fessContractAddress, fnirContractAddress } from '../utils/config';\n\nfunction Farming(props) {\n  const metamaskContextValue = React.useContext(MetamaskContext);\n  const [totalApprove, setTotalApprove] = React.useState(0);\n\n  const handleApprove = async () => {\n    if (Number(totalApprove) > 0) {\n      const approveRequest = await metamaskContextValue.fessContractInstance.methods.stakeSuperTokens(metamaskContextValue.web3Instance.utils.toWei(String(totalApprove), 'ether')).send({\n        from: metamaskContextValue.ethereumAddress,\n        to: fessContractAddress\n      });\n      console.log('approveRequest: ', approveRequest);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FarmingView, {\n    totalApprove: totalApprove,\n    setTotalApprove: setTotalApprove,\n    handleApprove: handleApprove,\n    global_error: props.global_error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Notif, {\n    global_error: props.global_error,\n    global_error_ret: props.global_error_ret,\n    global_error_clr: props.global_error_clr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  })));\n}\n\nconst mapStateToProps = state => ({\n  auth_store: state.auth_store,\n  login_ret: state.auth_store.login_ret,\n  login_loading_flag: state.auth_store.login_loading,\n  global_error_ret: state.global_store.global_error_ret\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  login_loading,\n  global_error,\n  global_error_clr,\n  set_user_data\n})(Farming);","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/Containers/Farming.js"],"names":["React","LoginView","login","login_loading","set_user_data","global_error","global_error_clr","connect","Notif","FarmingView","Footer","MetamaskContext","fessContractAddress","fnirContractAddress","Farming","props","metamaskContextValue","useContext","totalApprove","setTotalApprove","useState","handleApprove","Number","approveRequest","fessContractInstance","methods","stakeSuperTokens","web3Instance","utils","toWei","String","send","from","ethereumAddress","to","console","log","global_error_ret","mapStateToProps","state","auth_store","login_ret","login_loading_flag","global_store"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,iBAArC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,mBAA/C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA,OAAOC,eAAP,MAA4B,sBAA5B;AAEA,SACEC,mBADF,EAEEC,mBAFF,QAGO,iBAHP;;AAKA,SAASC,OAAT,CAAkBC,KAAlB,EAAwB;AAClB,QAAMC,oBAAoB,GAAGhB,KAAK,CAACiB,UAAN,CAAiBN,eAAjB,CAA7B;AAEA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCnB,KAAK,CAACoB,QAAN,CAAe,CAAf,CAAxC;;AAEA,QAAMC,aAAa,GAAG,YAAW;AAC/B,QAAIC,MAAM,CAACJ,YAAD,CAAN,GAAuB,CAA3B,EAA8B;AAC5B,YAAMK,cAAc,GAAG,MAAMP,oBAAoB,CAACQ,oBAArB,CAA0CC,OAA1C,CAC5BC,gBAD4B,CAE3BV,oBAAoB,CAACW,YAArB,CAAkCC,KAAlC,CAAwCC,KAAxC,CACEC,MAAM,CAACZ,YAAD,CADR,EAEE,OAFF,CAF2B,EAO5Ba,IAP4B,CAOvB;AACJC,QAAAA,IAAI,EAAEhB,oBAAoB,CAACiB,eADvB;AAEJC,QAAAA,EAAE,EAAEtB;AAFA,OAPuB,CAA7B;AAYAuB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCb,cAAhC;AACD;AACF,GAhBD;;AAmBE,sBACK,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AACI,IAAA,YAAY,EAAEL,YADlB;AAEI,IAAA,eAAe,EAAEC,eAFrB;AAGI,IAAA,aAAa,EAAEE,aAHnB;AAII,IAAA,YAAY,EAAIN,KAAK,CAACV,YAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAOD,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPC,eAQE,oBAAC,KAAD;AACG,IAAA,YAAY,EAAIU,KAAK,CAACV,YADzB;AAEG,IAAA,gBAAgB,EAAIU,KAAK,CAACsB,gBAF7B;AAGG,IAAA,gBAAgB,EAAItB,KAAK,CAACT,gBAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADH,CADL;AAkBP;;AAED,MAAMgC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,UAAU,EAAED,KAAK,CAACC,UADc;AAEhCC,EAAAA,SAAS,EAACF,KAAK,CAACC,UAAN,CAAiBC,SAFK;AAGhCC,EAAAA,kBAAkB,EAACH,KAAK,CAACC,UAAN,CAAiBrC,aAHJ;AAIhCkC,EAAAA,gBAAgB,EAACE,KAAK,CAACI,YAAN,CAAmBN;AAJJ,CAAL,CAA7B;;AAOA,eAAe9B,OAAO,CAAC+B,eAAD,EAAkB;AACtCpC,EAAAA,KADsC;AAEtCC,EAAAA,aAFsC;AAGtCE,EAAAA,YAHsC;AAItCC,EAAAA,gBAJsC;AAKtCF,EAAAA;AALsC,CAAlB,CAAP,CAMXU,OANW,CAAf","sourcesContent":["import React from \"react\"\nimport LoginView from \"../Views/HomeView\"\nimport { login, login_loading } from \"../actions/Auth\"\nimport { set_user_data } from \"../actions/user\"\nimport { global_error, global_error_clr } from \"../actions/global\"\nimport { connect } from 'react-redux';\nimport Notif from '../Components/Notif'\n// import { ReCaptcha } from 'react-recaptcha-v3'\nimport FarmingView from \"../Views/FarmingView\"\nimport Footer from \"../Components/Footer/Index.js\"\n\nimport MetamaskContext from '../contexts/metamask';\n\nimport {\n  fessContractAddress,\n  fnirContractAddress\n} from '../utils/config';\n\nfunction Farming (props){\n      const metamaskContextValue = React.useContext(MetamaskContext);\n\n      const [totalApprove, setTotalApprove] = React.useState(0);\n\n      const handleApprove = async() => {\n        if (Number(totalApprove) > 0) {\n          const approveRequest = await metamaskContextValue.fessContractInstance.methods\n          .stakeSuperTokens(\n            metamaskContextValue.web3Instance.utils.toWei(\n              String(totalApprove),\n              'ether',\n            ),\n          )\n          .send({\n            from: metamaskContextValue.ethereumAddress,\n            to: fessContractAddress,\n          });\n\n          console.log('approveRequest: ', approveRequest)\n        }\n      }\n\n\n        return (\n             <React.Fragment>\n                <div >\n                <FarmingView\n                    totalApprove={totalApprove}\n                    setTotalApprove={setTotalApprove}\n                    handleApprove={handleApprove}\n                    global_error = {props.global_error}\n                  />\n               <Footer />\n                  <Notif\n                     global_error = {props.global_error}\n                     global_error_ret = {props.global_error_ret}\n                     global_error_clr = {props.global_error_clr}\n                  />\n                </div>\n             </React.Fragment>\n        )\n}\n\nconst mapStateToProps = state => ({\n  auth_store: state.auth_store,\n  login_ret:state.auth_store.login_ret,\n  login_loading_flag:state.auth_store.login_loading,\n  global_error_ret:state.global_store.global_error_ret\n})\n\nexport default connect(mapStateToProps, {\n  login,\n  login_loading,\n  global_error,\n  global_error_clr,\n  set_user_data\n })(Farming)"]},"metadata":{},"sourceType":"module"}