{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { GLOBAL_ERROR } from '../Constants';\nimport { global_error_ret, global_error_clr } from '../actions/global';\nimport api from '../utils/api_routes';\nimport { get_url_params } from \"../utils/common_utilities\";\nimport store from '../store'; // worker Saga: will be fired on USER_FETCH_REQUESTED actions\n\nfunction* global_error_saga() {\n  try {\n    const data = yield store.getState().global_store.global_error;\n    const headers = {\n      'headers': {\n        'Authorization': localStorage.getItem('token')\n      }\n    };\n    yield put(global_error_ret({\n      success: data.success,\n      message: data.message,\n      heading: data.heading,\n      data: data.data\n    }));\n  } catch (e) {\n    console.log(e.response, \"e in global_error_saga\");\n  }\n}\n\nexport const global_saga = [takeLatest(GLOBAL_ERROR, global_error_saga)];\nexport default global_saga;","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/Sagas/global_saga.js"],"names":["call","put","takeEvery","takeLatest","GLOBAL_ERROR","global_error_ret","global_error_clr","api","get_url_params","store","global_error_saga","data","getState","global_store","global_error","headers","localStorage","getItem","success","message","heading","e","console","log","response","global_saga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SAAWC,YAAX,QAA+B,cAA/B;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,mBAAnD;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CAEA;;AACA,UAAUC,iBAAV,GAA8B;AAE3B,MAAI;AACD,UAAOC,IAAI,GAAG,MAAMF,KAAK,CAACG,QAAN,GAAiBC,YAAjB,CAA8BC,YAAlD;AACA,UAAMC,OAAO,GAAI;AAAE,iBAAW;AAAE,yBAAiBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAnB;AAAb,KAAjB;AAEA,UAAMhB,GAAG,CAACI,gBAAgB,CAAC;AACzBa,MAAAA,OAAO,EAACP,IAAI,CAACO,OADY;AAEzBC,MAAAA,OAAO,EAACR,IAAI,CAACQ,OAFY;AAGzBC,MAAAA,OAAO,EAACT,IAAI,CAACS,OAHY;AAIzBT,MAAAA,IAAI,EAACA,IAAI,CAACA;AAJe,KAAD,CAAjB,CAAT;AAMF,GAVD,CAUE,OAAOU,CAAP,EAAU;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,QAAd,EAAuB,wBAAvB;AACA;AACH;;AAED,OAAO,MAAMC,WAAW,GAAG,CACxBtB,UAAU,CAACC,YAAD,EAAeM,iBAAf,CADc,CAApB;AAIP,eAAee,WAAf","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects'\nimport {   GLOBAL_ERROR } from '../Constants'\nimport { global_error_ret, global_error_clr } from '../actions/global'\nimport api from '../utils/api_routes'\nimport { get_url_params } from \"../utils/common_utilities\"\nimport store from '../store'\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* global_error_saga() {\n\n   try {\n      const  data = yield store.getState().global_store.global_error\n      const headers  = { 'headers': { 'Authorization': localStorage.getItem('token') } }\n     \n      yield put(global_error_ret({\n        success:data.success,\n        message:data.message,\n        heading:data.heading,\n        data:data.data\n       }))\n   } catch (e) {\n    console.log(e.response,\"e in global_error_saga\")\n   }\n}\n\nexport const global_saga = [\n   takeLatest(GLOBAL_ERROR, global_error_saga)\n]\n\nexport default global_saga"]},"metadata":{},"sourceType":"module"}