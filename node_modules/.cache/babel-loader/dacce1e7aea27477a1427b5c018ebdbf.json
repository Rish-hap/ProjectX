{"ast":null,"code":"import React from\"react\";import LoginView from\"../Views/HomeView\";import{login,login_loading}from\"../actions/Auth\";import{set_user_data}from\"../actions/user\";import{global_error,global_error_clr}from\"../actions/global\";import{connect}from'react-redux';import Notif from'../Components/Notif';// import { ReCaptcha } from 'react-recaptcha-v3'\nimport Footer from\"../Components/Footer/Index.js\";import StakingView from\"../Views/StakingView\";import MetamaskContext from'../contexts/metamask';function Staking(props){var metamaskContextValue=React.useContext(MetamaskContext);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(StakingView,{global_error:props.global_error}),/*#__PURE__*/React.createElement(Footer,null),/*#__PURE__*/React.createElement(Notif,{global_error:props.global_error,global_error_ret:props.global_error_ret,global_error_clr:props.global_error_clr})));}var mapStateToProps=function mapStateToProps(state){return{auth_store:state.auth_store,login_ret:state.auth_store.login_ret,login_loading_flag:state.auth_store.login_loading,global_error_ret:state.global_store.global_error_ret};};export default connect(mapStateToProps,{login:login,login_loading:login_loading,global_error:global_error,global_error_clr:global_error_clr,set_user_data:set_user_data})(Staking);","map":{"version":3,"sources":["/home/ajoncode/crypticocean-projects/fesschain/ProjectX/src/Containers/Staking.js"],"names":["React","LoginView","login","login_loading","set_user_data","global_error","global_error_clr","connect","Notif","Footer","StakingView","MetamaskContext","Staking","props","metamaskContextValue","useContext","global_error_ret","mapStateToProps","state","auth_store","login_ret","login_loading_flag","global_store"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,OAASC,KAAT,CAAgBC,aAAhB,KAAqC,iBAArC,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,OAASC,YAAT,CAAuBC,gBAAvB,KAA+C,mBAA/C,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,+BAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CAEA,MAAOC,CAAAA,eAAP,KAA4B,sBAA5B,CACA,QAASC,CAAAA,OAAT,CAAkBC,KAAlB,CAAyB,CAEnB,GAAMC,CAAAA,oBAAoB,CAAGd,KAAK,CAACe,UAAN,CAAiBJ,eAAjB,CAA7B,CAEE,mBACK,oBAAC,KAAD,CAAO,QAAP,mBACG,4CACA,oBAAC,WAAD,EAGI,YAAY,CAAIE,KAAK,CAACR,YAH1B,EADA,cAMA,oBAAC,MAAD,MANA,cAOE,oBAAC,KAAD,EACG,YAAY,CAAIQ,KAAK,CAACR,YADzB,CAEG,gBAAgB,CAAIQ,KAAK,CAACG,gBAF7B,CAGG,gBAAgB,CAAIH,KAAK,CAACP,gBAH7B,EAPF,CADH,CADL,CAiBP,CAED,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCC,UAAU,CAAED,KAAK,CAACC,UADc,CAEhCC,SAAS,CAACF,KAAK,CAACC,UAAN,CAAiBC,SAFK,CAGhCC,kBAAkB,CAACH,KAAK,CAACC,UAAN,CAAiBhB,aAHJ,CAIhCa,gBAAgB,CAACE,KAAK,CAACI,YAAN,CAAmBN,gBAJJ,CAAL,EAA7B,CAOA,cAAeT,CAAAA,OAAO,CAACU,eAAD,CAAkB,CACtCf,KAAK,CAALA,KADsC,CAEtCC,aAAa,CAAbA,aAFsC,CAGtCE,YAAY,CAAZA,YAHsC,CAItCC,gBAAgB,CAAhBA,gBAJsC,CAKtCF,aAAa,CAAbA,aALsC,CAAlB,CAAP,CAMXQ,OANW,CAAf","sourcesContent":["import React from \"react\"\nimport LoginView from \"../Views/HomeView\"\nimport { login, login_loading } from \"../actions/Auth\"\nimport { set_user_data } from \"../actions/user\"\nimport { global_error, global_error_clr } from \"../actions/global\"\nimport { connect } from 'react-redux';\nimport Notif from '../Components/Notif'\n// import { ReCaptcha } from 'react-recaptcha-v3'\nimport Footer from \"../Components/Footer/Index.js\"\nimport StakingView from \"../Views/StakingView\"\n\nimport MetamaskContext from '../contexts/metamask';\nfunction Staking (props) {\n\n      const metamaskContextValue = React.useContext(MetamaskContext);\n\n        return (\n             <React.Fragment>\n                <div >\n                <StakingView\n\n\n                    global_error = {props.global_error}\n                  />\n                <Footer />\n                  <Notif\n                     global_error = {props.global_error}\n                     global_error_ret = {props.global_error_ret}\n                     global_error_clr = {props.global_error_clr}\n                  />\n                </div>\n             </React.Fragment>\n        )\n}\n\nconst mapStateToProps = state => ({\n  auth_store: state.auth_store,\n  login_ret:state.auth_store.login_ret,\n  login_loading_flag:state.auth_store.login_loading,\n  global_error_ret:state.global_store.global_error_ret\n})\n\nexport default connect(mapStateToProps, {\n  login,\n  login_loading,\n  global_error,\n  global_error_clr,\n  set_user_data\n })(Staking)\n"]},"metadata":{},"sourceType":"module"}