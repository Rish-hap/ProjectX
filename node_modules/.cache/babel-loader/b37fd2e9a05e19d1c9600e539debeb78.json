{"ast":null,"code":"var _jsxFileName = \"/home/ajoncode/Rish-hap/ProjectX/src/Components/InputComponent/index.js\";\nimport React from 'react';\nimport { nonNegative, onlyAlphabets, onlyAlphabets2, positiveNumbers, uptoTwoDeciaml, validateNoSpace, uptoTwoDeciaml2, positiveNumbersUpto100, positiveNumbersIncludingZero, validateAlphaNumeric, only_alphabets } from '../../utils/common_utilities';\nimport SelectComponent from \"../Select\";\nimport AnimatedMount from \"../../HOC/AnimatedMount\";\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\nimport './index.scss'; // import labelInfo from \"img/labelInfo.png\"\n\nlet labelInfo = '';\n\nclass InputComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n      password: true,\n      value: ''\n    };\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleImageClick = this.handleImageClick.bind(this);\n  }\n\n  handleImageClick(e, name) {// e.preventDefault()\n    // e.stopPropagation()\n    // console.log(name, this.refs, \"lololo \")\n    // document.getElementById(\"up\").click()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      error: nextProps.error\n    });\n  }\n\n  handleOnChange(e) {\n    if (this.props.type === 'country') {\n      if (!!this.state.error) {\n        this.props.toggleError();\n      }\n\n      this.props.onChange(e, 'country');\n    } else if (this.props.type === 'state') {\n      if (!!this.state.error) {\n        this.props.toggleError();\n      }\n\n      this.props.onChange(e, 'state');\n    } else {\n      let validation = this.props.validationProps.validation;\n      let validationProps = this.props.validationProps;\n      let value = e.target.value;\n      console.log(validation, \"only_alphabets\");\n\n      if (!!validation) {\n        if (validation === \"only_alphabets\") {\n          if (!!only_alphabets(value)) {\n            if (!!this.state.error) {\n              this.props.toggleError();\n            }\n\n            this.props.onChange(e);\n          } else {\n            e.stopPropagation();\n          }\n        }\n      } else {\n        if (!!this.state.error) {\n          this.props.toggleError();\n        }\n\n        this.props.onChange(e);\n      }\n    }\n  }\n\n  render() {\n    // console.log(\"this.propssssssssssssssssssssss\", this.props)\n    if (this.props.type === 'state') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: { ...this.props.inputWrapperStyle,\n          marginTop: '10px'\n        },\n        className: !!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, this.props.noLabel === true ? \"\" : /*#__PURE__*/React.createElement(\"label\", {\n        style: this.props.inputLabelClass,\n        className: \"inputcomponent_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 45\n        }\n      }, this.props.label, !!this.props.infoId && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(RegionDropdown, {\n        id: \"region\",\n        labelType: \"full\",\n        blankOptionLabel: \"Enter State\",\n        className: `regin ${this.state.error ? 'inputcomponent_error' : ''}`,\n        country: this.props.country,\n        value: this.props.value,\n        onChange: e => this.handleOnChange(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: `inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, this.props.errorText));\n    } else if (this.props.type === 'country') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: { ...this.props.inputWrapperStyle,\n          marginTop: '10px'\n        },\n        className: !!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, this.props.noLabel === true ? \"\" : /*#__PURE__*/React.createElement(\"label\", {\n        style: this.props.inputLabelClass,\n        className: \"inputcomponent_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 45\n        }\n      }, this.props.label, !!this.props.infoId && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(CountryDropdown, {\n        id: \"country\",\n        labelType: \"full\",\n        className: `country ${this.state.error ? 'inputcomponent_error' : ''}`,\n        placeholder: \"Enter Country\",\n        value: this.props.value,\n        onChange: e => this.handleOnChange(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: `inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, this.props.errorText));\n    } else if (this.props.type === \"text\" || this.props.type === \"number\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: { ...this.props.inputWrapperStyle,\n          marginTop: '10px'\n        },\n        className: !!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, this.props.noLabel === true ? \"\" : /*#__PURE__*/React.createElement(\"label\", {\n        style: this.props.inputLabelClass,\n        className: \"inputcomponent_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 47\n        }\n      }, this.props.label, !!this.props.infoId && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        disabled: !!this.props.disabled // placeholder={!!this.props.value?this.props.value:this.props.label}\n        ,\n        placeholder: this.props.placeholder,\n        id: this.props.name,\n        onChange: e => this.handleOnChange(e),\n        style: this.props.inputStyle,\n        type: this.props.type,\n        required: this.props.required,\n        value: this.props.value,\n        step: this.props.step || 'any',\n        className: !!this.state.error ? !!this.props.inputErrorClassName ? this.props.inputErrorClassName : \"inputcomponent_error\" : !!this.props.inputClassName ? `${this.props.inputClassName}` : `inputcomponent_input`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: `inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }, this.props.errorText));\n    } else if (this.props.type === \"dropdown\") {\n      // console.log(this.props, \"props in dropdown\")\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: this.props.key,\n        style: { ...this.props.inputWrapperStyle,\n          marginTop: '10px'\n        },\n        className: !!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, this.props.noLabel === true ? \"\" : /*#__PURE__*/React.createElement(\"label\", {\n        style: this.props.inputLabelClass,\n        className: \"inputcomponent_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 47\n        }\n      }, this.props.label, !!this.props.infoId && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(SelectComponent, {\n        id: this.props.name // label=\"React Select\"\n        ,\n        placeholder: this.props.placeholder,\n        name: this.props.name,\n        onChange: e => this.handleOnChange(e),\n        value: this.props.value,\n        options: typeof this.props.options === 'function' ? this.props.options() : this.props.options,\n        disabled: this.props.disabled,\n        className: this.props.className,\n        style: this.props.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: `inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }\n      }, this.props.errorText));\n    } else if (this.props.type === \"password\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: this.props.key,\n        style: { ...this.props.inputWrapperStyle,\n          marginTop: '10px'\n        },\n        className: !!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }\n      }, this.props.noLabel === true ? \"\" : /*#__PURE__*/React.createElement(\"label\", {\n        style: this.props.inputLabelClass,\n        className: \"inputcomponent_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 47\n        }\n      }, this.props.label, !!this.props.infoId && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        style: this.props.inputStyle,\n        disabled: !!this.props.disabled // placeholder={!!this.props.placeholder?this.props.placeholder:!!this.props.value?this.props.value:this.props.label}\n        ,\n        placeholder: this.props.placeholder,\n        id: this.props.name,\n        onChange: e => this.handleOnChange(e),\n        type: this.state.password ? \"password\" : \"text\",\n        required: this.props.required,\n        value: this.props.value,\n        className: !!this.state.error ? !!this.props.inputErrorClassName ? this.props.inputErrorClassName : \"inputcomponent_error_auth\" : !!this.props.inputClassName ? `${this.props.inputClassName}` : `inputcomponent_input`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.setState({\n          password: !this.state.password\n        }),\n        toggle: \"#password-field\",\n        className: \" field-icon toggle-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        style: {\n          color: \"#000\"\n        },\n        className: this.state.password ? \"fa fa-fw fa-eye-slash password_eye\" : 'fa fa-fw fa-eye password_eye',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 149\n        }\n      }), \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        className: `inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }\n      }, this.props.errorText));\n    } else if (this.props.type === \"textarea\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: this.props.key,\n        style: { ...this.props.inputWrapperStyle,\n          marginTop: '10px'\n        },\n        className: !!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 9\n        }\n      }, this.props.noLabel === true ? \"\" : /*#__PURE__*/React.createElement(\"label\", {\n        style: this.props.inputLabelClass,\n        className: \"inputcomponent_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 47\n        }\n      }, this.props.label, !!this.props.infoId && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"textarea\", {\n        style: this.props.inputStyle,\n        disabled: !!this.props.disabled,\n        id: this.props.name // placeholder={!!this.props.placeholder?this.props.placeholder:!!this.props.value?this.props.value:this.props.label}\n        ,\n        placeholder: this.props.placeholder,\n        rows: !!this.props.rows ? this.props.rows : 5,\n        onChange: e => this.handleOnChange(e),\n        type: this.props.type,\n        required: this.props.required,\n        value: this.props.value,\n        className: !!this.state.error ? `inputcomponent_error` : !!this.props.inputClassName ? `${this.props.inputClassName}` : `inputcomponent_input inputcomponent_textarea `,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: `inputcomponent_error_message ${!!this.props.error ? 'display-block' : 'display-none'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }\n      }, this.props.errorText));\n    } else if (this.props.type === \"image\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: { ...this.props.inputWrapperStyle,\n          marginTop: '10px'\n        },\n        className: !!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }\n      }, this.props.noLabel === true ? \"\" : /*#__PURE__*/React.createElement(\"label\", {\n        style: this.props.inputLabelClass,\n        className: \"inputcomponent_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 47\n        }\n      }, this.props.label, !!this.props.infoId && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        onClick: e => this.handleImageClick(e, this.props.name),\n        className: \" inputcomponent_input  upload-fileUpload upload-btn upload-btn-orange\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          display: 'inline'\n        },\n        src: \"https://image.flaticon.com/icons/svg/136/136549.svg\",\n        className: \"upload-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        disabled: !!this.props.disabled,\n        style: {\n          display: 'inline'\n        },\n        type: \"file\",\n        accept: \".pdf, .docx, image/jpe ,image/png, image/jpeg\",\n        id: this.props.name,\n        onChange: this.props.onChange,\n        name: \"back_id\",\n        required: this.props.required,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }\n      })));\n    } else if (this.props.type === \"newtext\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: { ...this.props.inputWrapperStyle,\n          marginTop: '10px'\n        },\n        className: !!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 9\n        }\n      }, this.props.noLabel === true ? \"\" : /*#__PURE__*/React.createElement(\"label\", {\n        style: this.props.inputLabelClass,\n        className: \"inputcomponent_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 47\n        }\n      }, this.props.label, !!this.props.infoId && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        disabled: !!this.props.disabled // placeholder={!!this.props.value?this.props.value:this.props.label}\n        ,\n        placeholder: this.props.placeholder,\n        id: this.props.name,\n        onChange: e => this.handleOnChange(e),\n        style: this.props.inputStyle,\n        type: this.props.type,\n        required: this.props.required,\n        value: this.props.value,\n        step: this.props.step || 'any',\n        className: !!this.state.error ? !!this.props.inputErrorClassName ? this.props.inputErrorClassName : \"inputcomponent_error\" : !!this.props.inputClassName ? `${this.props.inputClassName}` : `inputcomponent_input`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: `inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }\n      }, this.props.errorText));\n    } else if (this.props.type === \"date\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: { ...this.props.inputWrapperStyle,\n          marginTop: '10px'\n        },\n        className: !!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 9\n        }\n      }, this.props.noLabel === true ? \"\" : /*#__PURE__*/React.createElement(\"label\", {\n        style: this.props.inputLabelClass,\n        className: \"inputcomponent_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 47\n        }\n      }, this.props.label, !!this.props.infoId && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        disabled: !!this.props.disabled // placeholder={!!this.props.value?this.props.value:this.props.label}\n        ,\n        placeholder: this.props.placeholder,\n        id: this.props.name,\n        onChange: e => this.handleOnChange(e),\n        style: this.props.inputStyle,\n        type: this.props.type,\n        required: this.props.required,\n        value: this.props.value,\n        step: this.props.step || 'any',\n        className: !!this.state.error ? !!this.props.inputErrorClassName ? this.props.inputErrorClassName : \"inputcomponent_error\" : !!this.props.inputClassName ? `${this.props.inputClassName}` : `inputcomponent_input`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: `inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }\n      }, this.props.errorText));\n    } else if (this.props.type === \"newdropdown\") {\n      // console.log(this.props, \"props in dropdown\")\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: this.props.key,\n        style: { ...this.props.inputWrapperStyle,\n          marginTop: '10px'\n        },\n        className: !!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 9\n        }\n      }, this.props.noLabel === true ? \"\" : /*#__PURE__*/React.createElement(\"label\", {\n        style: this.props.inputLabelClass,\n        style: {\n          color: \"#909090\",\n          fontWeight: '400'\n        },\n        className: \"inputcomponent_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 47\n        }\n      }, this.props.label), /*#__PURE__*/React.createElement(SelectComponent, {\n        id: this.props.name // label=\"React Select\"\n        ,\n        placeholder: this.props.placeholder,\n        name: this.props.name,\n        onChange: e => this.handleOnChange(e),\n        value: this.props.value,\n        options: typeof this.props.options === 'function' ? this.props.options() : this.props.options,\n        disabled: this.props.disabled,\n        className: this.props.className,\n        style: this.props.style,\n        selectStyle: {\n          borderRadius: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: `inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }\n      }, this.props.errorText));\n    }\n  }\n\n}\n\nexport default AnimatedMount({\n  unmountedStyle: {\n    opacity: 0,\n    transform: 'translate3d(0, -2rem, 0)',\n    transition: 'opacity 100ms ease-out, transform 100ms ease-out'\n  },\n  mountedStyle: {\n    opacity: 1,\n    transform: 'translate3d(0, 0, 0)',\n    transition: 'opacity .5s ease-out, transform .5s ease-out'\n  }\n})(InputComponent);","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/Components/InputComponent/index.js"],"names":["React","nonNegative","onlyAlphabets","onlyAlphabets2","positiveNumbers","uptoTwoDeciaml","validateNoSpace","uptoTwoDeciaml2","positiveNumbersUpto100","positiveNumbersIncludingZero","validateAlphaNumeric","only_alphabets","SelectComponent","AnimatedMount","CountryDropdown","RegionDropdown","CountryRegionData","isValidPhoneNumber","labelInfo","InputComponent","Component","constructor","props","state","error","password","value","handleOnChange","bind","handleImageClick","e","name","componentWillReceiveProps","nextProps","setState","type","toggleError","onChange","validation","validationProps","target","console","log","stopPropagation","render","inputWrapperStyle","marginTop","wrapperClass","noLabel","inputLabelClass","label","infoId","country","errorText","disabled","placeholder","inputStyle","required","step","inputErrorClassName","inputClassName","key","options","className","style","color","rows","display","fontWeight","borderRadius","unmountedStyle","opacity","transform","transition","mountedStyle"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  nonNegative,\n  onlyAlphabets,\n  onlyAlphabets2,\n  positiveNumbers,\n  uptoTwoDeciaml,\n  validateNoSpace,\n  uptoTwoDeciaml2,\n  positiveNumbersUpto100,\n  positiveNumbersIncludingZero,\n  validateAlphaNumeric,\n  only_alphabets\n} from '../../utils/common_utilities'\nimport SelectComponent from \"../Select\"\nimport AnimatedMount from \"../../HOC/AnimatedMount\"\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\n\n\nimport './index.scss'\n// import labelInfo from \"img/labelInfo.png\"\nlet labelInfo =''\n\n\nclass InputComponent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: false,\n      password: true,\n      value: ''\n    }\n    this.handleOnChange = this.handleOnChange.bind(this)\n    this.handleImageClick = this.handleImageClick.bind(this)\n  }\n\n  handleImageClick(e, name) {\n    // e.preventDefault()\n    // e.stopPropagation()\n    // console.log(name, this.refs, \"lololo \")\n    // document.getElementById(\"up\").click()\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      error: nextProps.error\n    })\n  }\n\n  handleOnChange(e) {\n \n    if((this.props.type === 'country')){\n      if (!!this.state.error) {\n        this.props.toggleError()\n      }\n      this.props.onChange(e,'country')\n    }else if((this.props.type === 'state')){\n      if (!!this.state.error) {\n        this.props.toggleError()\n      }\n      this.props.onChange(e,'state')\n    }else{\n  let validation = this.props.validationProps.validation\n  let validationProps = this.props.validationProps\n  let value = e.target.value\n\n   console.log(validation,\"only_alphabets\")\n   if(!!validation){\n    if (validation === \"only_alphabets\") {\n      if (!!only_alphabets(value)) {\n        if (!!this.state.error) {\n          this.props.toggleError()\n        }\n        this.props.onChange(e)\n      } else {\n        e.stopPropagation()\n      }\n    }\n   }else{\n   if (!!this.state.error) {\n    this.props.toggleError()\n  }\n  this.props.onChange(e)\n  }\n    }\n  }\n\n  render() {\n    // console.log(\"this.propssssssssssssssssssssss\", this.props)\n    if(this.props.type === 'state'){\n      return (\n        <div style={{ ...this.props.inputWrapperStyle, marginTop: '10px' }} className={!!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group'}>\n        {this.props.noLabel === true ? \"\" : <label style={this.props.inputLabelClass} className=\"inputcomponent_label\">\n          {this.props.label}\n          {\n            // this.props.required===true?'*':''\n          }\n          {!!this.props.infoId && <React.Fragment>\n            {/* <img data-for={this.props.infoId} data-tip='1' src={labelInfo} style={{ cursor: 'pointer', float: 'right', height: '15px', width: '15px' }} /> */}\n            {/* <TooltipComponent heading={this.props.infoHeading} bodyText={this.props.infoText} id={this.props.infoId} /> */}\n          </React.Fragment>}\n        </label>}\n                         <RegionDropdown\n                            id=\"region\"\n                            labelType=\"full\"\n                            blankOptionLabel=\"Enter State\"\n                            className={`regin ${this.state.error?'inputcomponent_error':''}`}\n                            country={this.props.country}\n                            value={this.props.value}\n                            onChange={(e) => this.handleOnChange(e)} />\n        <span className={`inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`}>{this.props.errorText}</span>\n      </div>\n  \n      )}\n\n      else if(this.props.type === 'country'){\n      return (\n\n        <div style={{ ...this.props.inputWrapperStyle, marginTop: '10px' }} className={!!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group'}>\n        {this.props.noLabel === true ? \"\" : <label style={this.props.inputLabelClass} className=\"inputcomponent_label\">\n          {this.props.label}\n          {\n            // this.props.required===true?'*':''\n          }\n          {!!this.props.infoId && <React.Fragment>\n            {/* <img data-for={this.props.infoId} data-tip='1' src={labelInfo} style={{ cursor: 'pointer', float: 'right', height: '15px', width: '15px' }} /> */}\n            {/* <TooltipComponent heading={this.props.infoHeading} bodyText={this.props.infoText} id={this.props.infoId} /> */}\n          </React.Fragment>}\n        </label>}\n        <CountryDropdown\n                              id=\"country\"\n                              labelType=\"full\"\n                              className={`country ${this.state.error?'inputcomponent_error':''}`}\n                              placeholder=\"Enter Country\"\n                              value={this.props.value}\n                              onChange={(e) => this.handleOnChange(e)}\n                 />\n        <span className={`inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`}>{this.props.errorText}</span>\n      </div>\n  \n      )\n    }else if (this.props.type === \"text\" || this.props.type === \"number\") {\n      return (\n        <div style={{ ...this.props.inputWrapperStyle, marginTop: '10px' }} className={!!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group'}>\n          {this.props.noLabel === true ? \"\" : <label style={this.props.inputLabelClass} className=\"inputcomponent_label\">\n            {this.props.label}\n            {\n              // this.props.required===true?'*':''\n            }\n            {!!this.props.infoId && <React.Fragment>\n              {/* <img data-for={this.props.infoId} data-tip='1' src={labelInfo} style={{ cursor: 'pointer', float: 'right', height: '15px', width: '15px' }} /> */}\n              {/* <TooltipComponent heading={this.props.infoHeading} bodyText={this.props.infoText} id={this.props.infoId} /> */}\n            </React.Fragment>}\n          </label>}\n          <input\n            disabled={!!this.props.disabled}\n            // placeholder={!!this.props.value?this.props.value:this.props.label}\n            placeholder={this.props.placeholder}\n            id={this.props.name}\n            onChange={(e) => this.handleOnChange(e)}\n            style={this.props.inputStyle}\n            type={this.props.type}\n            required={this.props.required}\n            value={this.props.value}\n            step={this.props.step || 'any'}\n            className={!!this.state.error ? !!this.props.inputErrorClassName ? this.props.inputErrorClassName : \"inputcomponent_error\" : !!this.props.inputClassName ? `${this.props.inputClassName}` : `inputcomponent_input`}\n          />\n          <span className={`inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`}>{this.props.errorText}</span>\n        </div>\n      )\n    }\n    else if (this.props.type === \"dropdown\") {\n      // console.log(this.props, \"props in dropdown\")\n      return (\n        <div key={this.props.key} style={{ ...this.props.inputWrapperStyle, marginTop: '10px' }} className={!!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group'}>\n          {this.props.noLabel === true ? \"\" : <label style={this.props.inputLabelClass} className=\"inputcomponent_label\">\n            {this.props.label}\n            {\n              // this.props.required===true?'*':''\n            }\n            {!!this.props.infoId && <React.Fragment>\n              {/* <img data-for={this.props.infoId} data-tip='1' src={labelInfo} style={{ cursor: 'pointer', float: 'right', height: '15px', width: '15px' }} /> */}\n              {/* <TooltipComponent heading={this.props.infoHeading} bodyText={this.props.infoText} id={this.props.infoId} /> */}\n            </React.Fragment>}\n          </label>}\n          {\n            //  <select\n            //  id={this.props.name}\n            //  // placeholder={!!this.props.placeholder?this.props.placeholder:!!this.props.value?this.props.value:this.props.label}\n            //  placeholder = {this.props.placeholder}\n            //  className={!!this.state.error?`inputcomponent_error`:this.props.disabled?'inputcomponent_dropdown disable-dropdown':'inputcomponent_dropdown'}\n            //  value={this.props.value}\n            // style={this.props.inputStyle}\n            //  onChange={(e) =>this.handleOnChange(e)}\n            //  required\n            //  disabled={!!this.props.disabled}\n            //  >\n            //  <option  disabled={!!this.props.disabled} value={undefined}>--SELECT ONE--</option>\n            //  {this.props.options.map(item=>{\n            //    return(\n            //      <option  disabled={!!this.props.disabled} value={item.value}>{item.name}</option>\n            //    )\n            //  })}\n            //  </select>\n          }\n\n          <SelectComponent\n            id={this.props.name}\n            // label=\"React Select\"\n            placeholder={this.props.placeholder}\n            name={this.props.name}\n            onChange={(e) => this.handleOnChange(e)}\n            value={this.props.value}\n            options={typeof this.props.options === 'function' ? this.props.options() : this.props.options}\n            disabled={this.props.disabled}\n            className={this.props.className}\n            style={this.props.style}\n          />\n\n\n          {\n            // <input placeholder={this.props.placeholder} onChange={this.onChange}  type=\"select\" required={this.props.required} value={this.state.value}  className={!!this.state.error?`inputcomponent_error`:'inputcomponent_input'} />\n          }\n          <span className={`inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`}>{this.props.errorText}</span>\n        </div>\n      )\n    }\n    else if (this.props.type === \"password\") {\n      return (\n        <div key={this.props.key} style={{ ...this.props.inputWrapperStyle, marginTop: '10px' }} className={!!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group'}>\n         \n          {this.props.noLabel === true ? \"\" : <label style={this.props.inputLabelClass} className=\"inputcomponent_label\">\n            {this.props.label}\n            {\n              // this.props.required===true?'*':''\n            }\n            {!!this.props.infoId && <React.Fragment>\n              {/* <img data-for={this.props.infoId} data-tip='1' src={labelInfo} style={{ cursor: 'pointer', float: 'right', height: '15px', width: '15px' }} /> */}\n              {/* <TooltipComponent heading={this.props.infoHeading} bodyText={this.props.infoText} id={this.props.infoId} /> */}\n            </React.Fragment>}\n          </label>}\n          <input\n            style={this.props.inputStyle}\n            disabled={!!this.props.disabled}\n            // placeholder={!!this.props.placeholder?this.props.placeholder:!!this.props.value?this.props.value:this.props.label}\n            placeholder={this.props.placeholder}\n            id={this.props.name}\n            onChange={(e) => this.handleOnChange(e)}\n            type={this.state.password ? \"password\" : \"text\"}\n            required={this.props.required}\n            value={this.props.value}\n            className={!!this.state.error ? !!this.props.inputErrorClassName ? this.props.inputErrorClassName : \"inputcomponent_error_auth\" : !!this.props.inputClassName ? `${this.props.inputClassName}` : `inputcomponent_input`}\n          />\n          <span onClick={() => this.setState({ password: !this.state.password })} toggle=\"#password-field\" className=\" field-icon toggle-password\"> <i style={{ color: \"#000\" }} className={this.state.password ? \"fa fa-fw fa-eye-slash password_eye\" : 'fa fa-fw fa-eye password_eye'} /> </span>\n          <span className={`inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`}>{this.props.errorText}</span>\n        </div>\n      )\n    }\n    else if (this.props.type === \"textarea\") {\n      return (\n        <div key={this.props.key} style={{ ...this.props.inputWrapperStyle, marginTop: '10px' }} className={!!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group'}>\n          {this.props.noLabel === true ? \"\" : <label style={this.props.inputLabelClass} className=\"inputcomponent_label\">\n            {this.props.label}\n            {\n              // this.props.required===true?'*':''\n            }\n            {!!this.props.infoId && <React.Fragment>\n              {/* <img data-for={this.props.infoId} data-tip='1' src={labelInfo} style={{ cursor: 'pointer', float: 'right', height: '15px', width: '15px' }} /> */}\n              {/* <TooltipComponent heading={this.props.infoHeading} bodyText={this.props.infoText} id={this.props.infoId} /> */}\n            </React.Fragment>}\n          </label>}\n          <textarea\n            style={this.props.inputStyle}\n            disabled={!!this.props.disabled}\n            id={this.props.name}\n            // placeholder={!!this.props.placeholder?this.props.placeholder:!!this.props.value?this.props.value:this.props.label}\n            placeholder={this.props.placeholder}\n            rows={!!this.props.rows ? this.props.rows : 5}\n            onChange={(e) => this.handleOnChange(e)} type={this.props.type} required={this.props.required} value={this.props.value} className={!!this.state.error ? `inputcomponent_error` : !!this.props.inputClassName ? `${this.props.inputClassName}` : `inputcomponent_input inputcomponent_textarea `}></textarea>\n          <span className={`inputcomponent_error_message ${!!this.props.error ? 'display-block' : 'display-none'}`}>{this.props.errorText}</span>\n        </div>\n      )\n    } else if (this.props.type === \"image\") {\n      return (\n        <div style={{ ...this.props.inputWrapperStyle, marginTop: '10px' }} className={!!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group'}>\n          {this.props.noLabel === true ? \"\" : <label style={this.props.inputLabelClass} className=\"inputcomponent_label\">\n            {this.props.label}\n            {\n              // this.props.required===true?'*':''\n            }\n            {!!this.props.infoId && <React.Fragment>\n              {/* <img data-for={this.props.infoId} data-tip='1' src={labelInfo} style={{ cursor: 'pointer', float: 'right', height: '15px', width: '15px' }} /> */}\n              {/* <TooltipComponent heading={this.props.infoHeading} bodyText={this.props.infoText} id={this.props.infoId} /> */}\n            </React.Fragment>}\n          </label>}\n\n          <div style={{ display: 'flex' }} onClick={(e) => this.handleImageClick(e, this.props.name)} className=\" inputcomponent_input  upload-fileUpload upload-btn upload-btn-orange\">\n            <img style={{ display: 'inline' }} src=\"https://image.flaticon.com/icons/svg/136/136549.svg\" className=\"upload-icon\" />\n            {\n              // <span className=\"upload-upl\" id=\"upload\">Upload document</span>\n              // dfeidbfebfebfbfbbfeubeb\n            }\n            {\n              // <input type=\"file\" id=\"up\"  onChange ={this.props.onChange} className=\"upload-upload upload-up\" />\n            }\n            <input disabled={!!this.props.disabled} style={{ display: 'inline' }} type=\"file\" accept=\".pdf, .docx, image/jpe ,image/png, image/jpeg\" id={this.props.name} onChange={this.props.onChange} name=\"back_id\" required={this.props.required} />\n          </div>\n        </div>\n      )\n    } else if (this.props.type === \"newtext\") {\n      return (\n        <div style={{ ...this.props.inputWrapperStyle, marginTop: '10px' }} className={!!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group'}>\n          {this.props.noLabel === true ? \"\" : <label style={this.props.inputLabelClass} className=\"inputcomponent_label\">\n            {this.props.label}\n            {\n              // this.props.required===true?'*':''\n            }\n            {!!this.props.infoId && <React.Fragment>\n              {/* <img data-for={this.props.infoId} data-tip='1' src={labelInfo} style={{ cursor: 'pointer', float: 'right', height: '15px', width: '15px' }} /> */}\n              {/* <TooltipComponent heading={this.props.infoHeading} bodyText={this.props.infoText} id={this.props.infoId} /> */}\n            </React.Fragment>}\n          </label>}\n          <input\n            disabled={!!this.props.disabled}\n            // placeholder={!!this.props.value?this.props.value:this.props.label}\n            placeholder={this.props.placeholder}\n            id={this.props.name}\n            onChange={(e) => this.handleOnChange(e)}\n            style={this.props.inputStyle}\n            type={this.props.type}\n            required={this.props.required}\n            value={this.props.value}\n            step={this.props.step || 'any'}\n            className={!!this.state.error ? !!this.props.inputErrorClassName ? this.props.inputErrorClassName : \"inputcomponent_error\" : !!this.props.inputClassName ? `${this.props.inputClassName}` : `inputcomponent_input`}\n          />\n          <span className={`inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`}>{this.props.errorText}</span>\n        </div>\n      )\n    }  else if (this.props.type === \"date\") {\n      return (\n        <div style={{ ...this.props.inputWrapperStyle, marginTop: '10px' }} className={!!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group'}>\n          {this.props.noLabel === true ? \"\" : <label style={this.props.inputLabelClass} className=\"inputcomponent_label\">\n            {this.props.label}\n            {\n              // this.props.required===true?'*':''\n            }\n            {!!this.props.infoId && <React.Fragment>\n              {/* <img data-for={this.props.infoId} data-tip='1' src={labelInfo} style={{ cursor: 'pointer', float: 'right', height: '15px', width: '15px' }} /> */}\n              {/* <TooltipComponent heading={this.props.infoHeading} bodyText={this.props.infoText} id={this.props.infoId} /> */}\n            </React.Fragment>}\n          </label>}\n          <input\n            disabled={!!this.props.disabled}\n            // placeholder={!!this.props.value?this.props.value:this.props.label}\n            placeholder={this.props.placeholder}\n            id={this.props.name}\n            onChange={(e) => this.handleOnChange(e)}\n            style={this.props.inputStyle}\n            type={this.props.type}\n            required={this.props.required}\n            value={this.props.value}\n            step={this.props.step || 'any'}\n            className={!!this.state.error ? !!this.props.inputErrorClassName ? this.props.inputErrorClassName : \"inputcomponent_error\" : !!this.props.inputClassName ? `${this.props.inputClassName}` : `inputcomponent_input`}\n          />\n          <span className={`inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`}>{this.props.errorText}</span>\n        </div>\n      )\n    } else if (this.props.type === \"newdropdown\") {\n      // console.log(this.props, \"props in dropdown\")\n      return (\n        <div key={this.props.key} style={{ ...this.props.inputWrapperStyle, marginTop: '10px' }} className={!!this.props.wrapperClass ? `${this.props.wrapperClass} inputcomponent_group` : 'inputcomponent_group'}>\n          {this.props.noLabel === true ? \"\" : <label style={this.props.inputLabelClass} style={{color: \"#909090\", fontWeight: '400'}} className=\"inputcomponent_label\">\n            {this.props.label}\n            {\n              // this.props.required===true?'*':''\n            }\n            {/* {!!this.props.infoId && <React.Fragment>\n              <img data-for={this.props.infoId} data-tip='1' src={labelInfo} style={{ cursor: 'pointer', float: 'right', height: '15px', width: '15px' }} />\n              <TooltipComponent place={`left`} heading={this.props.infoHeading} bodyText={this.props.infoText} id={this.props.infoId} />\n            </React.Fragment>} */}\n          </label>}\n          {\n            //  <select\n            //  id={this.props.name}\n            //  // placeholder={!!this.props.placeholder?this.props.placeholder:!!this.props.value?this.props.value:this.props.label}\n            //  placeholder = {this.props.placeholder}\n            //  className={!!this.state.error?`inputcomponent_error`:this.props.disabled?'inputcomponent_dropdown disable-dropdown':'inputcomponent_dropdown'}\n            //  value={this.props.value}\n            // style={this.props.inputStyle}\n            //  onChange={(e) =>this.handleOnChange(e)}\n            //  required\n            //  disabled={!!this.props.disabled}\n            //  >\n            //  <option  disabled={!!this.props.disabled} value={undefined}>--SELECT ONE--</option>\n            //  {this.props.options.map(item=>{\n            //    return(\n            //      <option  disabled={!!this.props.disabled} value={item.value}>{item.name}</option>\n            //    )\n            //  })}\n            //  </select>\n          }\n\n          <SelectComponent\n            id={this.props.name}\n            // label=\"React Select\"\n            placeholder={this.props.placeholder}\n            name={this.props.name}\n            onChange={(e) => this.handleOnChange(e)}\n            value={this.props.value}\n            options={typeof this.props.options === 'function' ? this.props.options() : this.props.options}\n            disabled={this.props.disabled}\n            className={this.props.className}\n            style={this.props.style}\n            selectStyle={{\n              borderRadius: 25\n            }}\n          />\n\n\n          {\n            // <input placeholder={this.props.placeholder} onChange={this.onChange}  type=\"select\" required={this.props.required} value={this.state.value}  className={!!this.state.error?`inputcomponent_error`:'inputcomponent_input'} />\n          }\n          <span className={`inputcomponent_error_message ${!!this.state.error ? 'display-block' : 'display-none'}`}>{this.props.errorText}</span>\n        </div>\n      )\n    }\n\n  }\n}\n\nexport default AnimatedMount({\n  unmountedStyle: {\n    opacity: 0,\n    transform: 'translate3d(0, -2rem, 0)',\n    transition: 'opacity 100ms ease-out, transform 100ms ease-out',\n  },\n  mountedStyle: {\n    opacity: 1,\n    transform: 'translate3d(0, 0, 0)',\n    transition: 'opacity .5s ease-out, transform .5s ease-out',\n  },\n})(InputComponent)\n"]},"metadata":{},"sourceType":"module"}