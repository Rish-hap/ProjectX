{"ast":null,"code":"import _regeneratorRuntime from\"/home/ajoncode/Rish-hap/ProjectX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/ajoncode/Rish-hap/ProjectX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/ajoncode/Rish-hap/ProjectX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import LoginView from\"../Views/HomeView\";import{login,login_loading}from\"../actions/Auth\";import{set_user_data}from\"../actions/user\";import{global_error,global_error_clr}from\"../actions/global\";import{connect}from'react-redux';import Notif from'../Components/Notif';// import { ReCaptcha } from 'react-recaptcha-v3'\nimport FarmingView from\"../Views/FarmingView\";import Footer from\"../Components/Footer/Index.js\";import MetamaskContext from'../contexts/metamask';import{fessContractAddress,fnirContractAddress}from'../utils/config';function Farming(_ref){var fnirBalance=_ref.fnirBalance,getFnirBalance=_ref.getFnirBalance,getFessBalance=_ref.getFessBalance,fessBalance=_ref.fessBalance;var metamaskContextValue=React.useContext(MetamaskContext);var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),userApprove=_React$useState2[0],setUserApprove=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),allowance=_React$useState4[0],setAllowance=_React$useState4[1];var _React$useState5=React.useState(0),_React$useState6=_slicedToArray(_React$useState5,2),userSwap=_React$useState6[0],setUserSwap=_React$useState6[1];var getAllowance=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var allowanceValue;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return metamaskContextValue.fessContractInstance.methods.allowance(metamaskContextValue.ethereumAddress,fnirContractAddress).call();case 3:allowanceValue=_context.sent;setAllowance((Number(allowanceValue)/Math.pow(10,18)).toLocaleString(undefined,{minimumFractionDigits:2,maximumFractionDigits:4}));setUserSwap((Number(allowanceValue)/Math.pow(10,18)).toLocaleString(undefined,{minimumFractionDigits:2,maximumFractionDigits:4}));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log('Farming -> getAllowance: err: ',_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function getAllowance(){return _ref2.apply(this,arguments);};}();var handleApprove=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var approveRequest;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(Number(userApprove)>0)){_context2.next=14;break;}_context2.prev=1;_context2.next=4;return metamaskContextValue.fessContractInstance.methods.approve(fnirContractAddress,metamaskContextValue.web3Instance.utils.toWei(String(userApprove),'ether')).send({from:metamaskContextValue.ethereumAddress,to:fessContractAddress});case 4:approveRequest=_context2.sent;console.log('approveRequest: ',approveRequest);getAllowance();getFessBalance();getFnirBalance();_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);console.log('Farming -> handleApprove: err: ',_context2.t0);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));return function handleApprove(){return _ref3.apply(this,arguments);};}();var handleSwap=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var swapRequest;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(Number(allowance)>0&&Number(userSwap)>0&&Number(allowance)>=Number(userSwap))){_context3.next=14;break;}_context3.prev=1;_context3.next=4;return metamaskContextValue.fnirContractInstance.methods.swapTokens(metamaskContextValue.web3Instance.utils.toWei(String(userSwap),'ether')).send({value:metamaskContextValue.web3Instance.utils.toWei(String(0.1),'ether'),from:metamaskContextValue.ethereumAddress,to:fnirContractAddress});case 4:swapRequest=_context3.sent;console.log('swapRequest: ',swapRequest);getAllowance();getFessBalance();getFnirBalance();_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](1);console.log('Farming -> handleSwap: err: ',_context3.t0);case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[1,11]]);}));return function handleSwap(){return _ref4.apply(this,arguments);};}();React.useEffect(function(){if(metamaskContextValue.fessContractInstance&&metamaskContextValue.fnirContractInstance){getAllowance();getFessBalance();getFnirBalance();}},[metamaskContextValue.fessContractInstance,metamaskContextValue.fnirContractInstance]);console.log('allowance: ',allowance);console.log('fessBalance: ',fessBalance);console.log('fnirBalance: ',fnirBalance);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FarmingView,{userApprove:userApprove,setUserApprove:setUserApprove,handleApprove:handleApprove,allowance:allowance,fessBalance:fessBalance,fnirBalance:fnirBalance,userSwap:userSwap,setUserSwap:setUserSwap,handleSwap:handleSwap// global_error = {props.global_error}\n}),/*#__PURE__*/React.createElement(Footer,null)));}var mapStateToProps=function mapStateToProps(state){return{auth_store:state.auth_store,login_ret:state.auth_store.login_ret,login_loading_flag:state.auth_store.login_loading,global_error_ret:state.global_store.global_error_ret};};export default connect(mapStateToProps,{login:login,login_loading:login_loading,global_error:global_error,global_error_clr:global_error_clr,set_user_data:set_user_data})(Farming);","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/Containers/Farming.js"],"names":["React","LoginView","login","login_loading","set_user_data","global_error","global_error_clr","connect","Notif","FarmingView","Footer","MetamaskContext","fessContractAddress","fnirContractAddress","Farming","fnirBalance","getFnirBalance","getFessBalance","fessBalance","metamaskContextValue","useContext","useState","userApprove","setUserApprove","allowance","setAllowance","userSwap","setUserSwap","getAllowance","fessContractInstance","methods","ethereumAddress","call","allowanceValue","Number","Math","pow","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","console","log","handleApprove","approve","web3Instance","utils","toWei","String","send","from","to","approveRequest","handleSwap","fnirContractInstance","swapTokens","value","swapRequest","useEffect","mapStateToProps","state","auth_store","login_ret","login_loading_flag","global_error_ret","global_store"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport LoginView from \"../Views/HomeView\"\nimport { login, login_loading } from \"../actions/Auth\"\nimport { set_user_data } from \"../actions/user\"\nimport { global_error, global_error_clr } from \"../actions/global\"\nimport { connect } from 'react-redux';\nimport Notif from '../Components/Notif'\n// import { ReCaptcha } from 'react-recaptcha-v3'\nimport FarmingView from \"../Views/FarmingView\"\nimport Footer from \"../Components/Footer/Index.js\"\n\nimport MetamaskContext from '../contexts/metamask';\n\nimport {\n  fessContractAddress,\n  fnirContractAddress\n} from '../utils/config';\n\nfunction Farming ({fnirBalance, getFnirBalance, getFessBalance, fessBalance  }){\n      const metamaskContextValue = React.useContext(MetamaskContext);\n\n      const [userApprove, setUserApprove] = React.useState(0);\n\n      const [allowance, setAllowance] = React.useState(0);\n\n      const [userSwap, setUserSwap] = React.useState(0);\n\n      const getAllowance = async () => {\n        try {\n          const allowanceValue = await metamaskContextValue.fessContractInstance.methods\n            .allowance(\n              metamaskContextValue.ethereumAddress,\n              fnirContractAddress,\n            )\n            .call();\n\n            setAllowance((\n              Number(allowanceValue) / Math.pow(10, 18)\n            ).toLocaleString(undefined, {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 4,\n            }))\n\n            setUserSwap((\n              Number(allowanceValue) / Math.pow(10, 18)\n            ).toLocaleString(undefined, {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 4,\n            }))\n        } catch (err) {\n          console.log('Farming -> getAllowance: err: ', err);\n        }\n      }\n\n      const handleApprove = async() => {\n        if (Number(userApprove) > 0) {\n          try {\n          const approveRequest = await metamaskContextValue.fessContractInstance.methods\n          .approve(\n            fnirContractAddress,\n            metamaskContextValue.web3Instance.utils.toWei(\n              String(userApprove),\n              'ether',\n            ),\n          )\n          .send({\n            from: metamaskContextValue.ethereumAddress,\n            to: fessContractAddress,\n          });\n\n          console.log('approveRequest: ', approveRequest)\n\n          getAllowance();\n          getFessBalance();\n        getFnirBalance();\n        } catch (err) {\n          console.log('Farming -> handleApprove: err: ', err);\n        }\n        }\n      }\n\n      const handleSwap = async() => {\n        if (Number(allowance) > 0 && Number(userSwap) > 0  && Number(allowance) >= Number(userSwap)) {\n          try {\n          const swapRequest = await metamaskContextValue.fnirContractInstance.methods\n          .swapTokens(\n            metamaskContextValue.web3Instance.utils.toWei(\n              String(userSwap),\n              'ether',\n            ),\n          )\n          .send({\n            value:  metamaskContextValue.web3Instance.utils.toWei(\n              String(0.1),\n              'ether',\n            ),\n            from: metamaskContextValue.ethereumAddress,\n            to: fnirContractAddress,\n          });\n\n          console.log('swapRequest: ', swapRequest)\n\n          getAllowance();\n          getFessBalance();\n          getFnirBalance();\n        } catch (err) {\n          console.log('Farming -> handleSwap: err: ', err);\n        }\n        }\n\n      }\n\n      React.useEffect(() => {\n        if (\n          metamaskContextValue.fessContractInstance &&\n          metamaskContextValue.fnirContractInstance\n        ) {\n        getAllowance();\n        getFessBalance();\n        getFnirBalance();\n        }\n      }, [metamaskContextValue.fessContractInstance,\n        metamaskContextValue.fnirContractInstance])\n\n\n      console.log('allowance: ', allowance)\n      console.log('fessBalance: ', fessBalance)\n      console.log('fnirBalance: ', fnirBalance)\n\n        return (\n             <React.Fragment>\n                <div >\n                <FarmingView\n                    userApprove={userApprove}\n                    setUserApprove={setUserApprove}\n                    handleApprove={handleApprove}\n                    allowance={allowance}\n                    fessBalance={fessBalance}\n                    fnirBalance={fnirBalance}\n                    userSwap={userSwap}\n                    setUserSwap={setUserSwap}\n                    handleSwap={handleSwap}\n                    // global_error = {props.global_error}\n                  />\n               <Footer />\n                  {/* <Notif\n                     global_error = {props.global_error}\n                     global_error_ret = {props.global_error_ret}\n                     global_error_clr = {props.global_error_clr}\n                  /> */}\n                </div>\n             </React.Fragment>\n        )\n}\n\nconst mapStateToProps = state => ({\n  auth_store: state.auth_store,\n  login_ret:state.auth_store.login_ret,\n  login_loading_flag:state.auth_store.login_loading,\n  global_error_ret:state.global_store.global_error_ret\n})\n\nexport default connect(mapStateToProps, {\n  login,\n  login_loading,\n  global_error,\n  global_error_clr,\n  set_user_data\n })(Farming)"]},"metadata":{},"sourceType":"module"}