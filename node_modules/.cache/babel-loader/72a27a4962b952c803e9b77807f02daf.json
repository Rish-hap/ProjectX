{"ast":null,"code":"import React,{useEffect}from\"react\";import{notification}from'antd';import'./index.scss';var Notif=function Notif(props){useEffect(function(){if(props.global_error_ret){if(props.global_error_ret.success){openNotificationWithIcon('success',props.global_error_ret.heading,props.global_error_ret.message);}else{openNotificationWithIcon('warning',props.global_error_ret.heading,props.global_error_ret.message);}props.global_error_clr();}},[props.global_error_ret]);var openNotificationWithIcon=function openNotificationWithIcon(type,heading,message){notification[type]({message:heading,description:message});};return/*#__PURE__*/React.createElement(React.Fragment,null);};export default Notif;","map":{"version":3,"sources":["/home/ajoncode/crypticocean-projects/fesschain/ProjectX/src/Components/Notif/index.js"],"names":["React","useEffect","notification","Notif","props","global_error_ret","success","openNotificationWithIcon","heading","message","global_error_clr","type","description"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAAUC,YAAV,KAA8B,MAA9B,CACA,MAAO,cAAP,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrBH,SAAS,CAAC,UAAI,CACV,GAAGG,KAAK,CAACC,gBAAT,CAA0B,CACtB,GAAGD,KAAK,CAACC,gBAAN,CAAuBC,OAA1B,CAAkC,CAC9BC,wBAAwB,CAAC,SAAD,CAAWH,KAAK,CAACC,gBAAN,CAAuBG,OAAlC,CAA0CJ,KAAK,CAACC,gBAAN,CAAuBI,OAAjE,CAAxB,CACH,CAFD,IAEM,CACFF,wBAAwB,CAAC,SAAD,CAAWH,KAAK,CAACC,gBAAN,CAAuBG,OAAlC,CAA0CJ,KAAK,CAACC,gBAAN,CAAuBI,OAAjE,CAAxB,CACH,CACDL,KAAK,CAACM,gBAAN,GACH,CACJ,CATQ,CASP,CAACN,KAAK,CAACC,gBAAP,CATO,CAAT,CAWA,GAAME,CAAAA,wBAAwB,CAAE,QAA1BA,CAAAA,wBAA0B,CAAEI,IAAF,CAAQH,OAAR,CAAiBC,OAAjB,CAA6B,CACzDP,YAAY,CAACS,IAAD,CAAZ,CAAmB,CACjBF,OAAO,CAAED,OADQ,CAEjBI,WAAW,CAAEH,OAFI,CAAnB,EAID,CALH,CAMI,mBAAO,oBAAC,KAAD,CAAO,QAAP,MAAP,CAEP,CApBD,CAqBA,cAAeN,CAAAA,KAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport {  notification } from 'antd';\nimport './index.scss'\n\nconst Notif = (props) => {\n    useEffect(()=>{\n        if(props.global_error_ret){\n            if(props.global_error_ret.success){\n                openNotificationWithIcon('success',props.global_error_ret.heading,props.global_error_ret.message)\n            }else {\n                openNotificationWithIcon('warning',props.global_error_ret.heading,props.global_error_ret.message)\n            }\n            props.global_error_clr()\n        }\n    },[props.global_error_ret])\n\n    const openNotificationWithIcon =( type, heading, message) => {\n        notification[type]({\n          message: heading,\n          description: message,\n        });\n      };\n        return <React.Fragment>\n        </React.Fragment>\n}\nexport default Notif"]},"metadata":{},"sourceType":"module"}