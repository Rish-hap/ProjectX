{"ast":null,"code":"var _jsxFileName = \"/home/ajoncode/Rish-hap/ProjectX/src/Containers/Farming.js\";\nimport React from \"react\";\nimport LoginView from \"../Views/HomeView\";\nimport { login, login_loading } from \"../actions/Auth\";\nimport { set_user_data } from \"../actions/user\";\nimport { global_error, global_error_clr } from \"../actions/global\";\nimport { connect } from 'react-redux';\nimport Notif from '../Components/Notif'; // import { ReCaptcha } from 'react-recaptcha-v3'\n\nimport FarmingView from \"../Views/FarmingView\";\nimport Footer from \"../Components/Footer/Index.js\";\nimport MetamaskContext from '../contexts/metamask';\nimport { fessContractAddress, fnirContractAddress } from '../utils/config';\n\nfunction Farming({\n  fnirBalance,\n  getFnirBalance,\n  getFessBalance,\n  fessBalance\n}) {\n  const metamaskContextValue = React.useContext(MetamaskContext);\n  const [userApprove, setUserApprove] = React.useState(0);\n  const [allowance, setAllowance] = React.useState(0);\n  const [userSwap, setUserSwap] = React.useState(0);\n\n  const getAllowance = async () => {\n    try {\n      const allowanceValue = await metamaskContextValue.fessContractInstance.methods.allowance(metamaskContextValue.ethereumAddress, fnirContractAddress).call();\n      setAllowance((Number(allowanceValue) / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 4\n      }));\n      setUserSwap((Number(allowanceValue) / Math.pow(10, 18)).toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 4\n      }));\n    } catch (err) {\n      console.log('Farming -> getAllowance: err: ', err);\n    }\n  };\n\n  const handleApprove = async () => {\n    if (Number(userApprove) > 0) {\n      try {\n        const approveRequest = await metamaskContextValue.fessContractInstance.methods.approve(fnirContractAddress, metamaskContextValue.web3Instance.utils.toWei(String(userApprove), 'ether')).send({\n          from: metamaskContextValue.ethereumAddress,\n          to: fessContractAddress\n        });\n        console.log('approveRequest: ', approveRequest);\n        getAllowance();\n        getFessBalance();\n        getFnirBalance();\n      } catch (err) {\n        console.log('Farming -> handleApprove: err: ', err);\n      }\n    }\n  };\n\n  const handleSwap = async () => {\n    // if (Number(allowance) > 0 && Number(userSwap) > 0  && Number(allowance) >= Number(userSwap)) {\n    try {\n      const swapRequest = await metamaskContextValue.fnirContractInstance.methods.swapTokens(metamaskContextValue.web3Instance.utils.toWei(String(userSwap), 'ether')).send({\n        value: metamaskContextValue.web3Instance.utils.toWei(String(0.1), 'ether'),\n        from: metamaskContextValue.ethereumAddress,\n        to: fnirContractAddress\n      });\n      console.log('swapRequest: ', swapRequest);\n      getAllowance();\n      getFessBalance();\n      getFnirBalance();\n    } catch (err) {\n      console.log('Farming -> handleSwap: err: ', err);\n    } // }\n\n  };\n\n  React.useEffect(() => {\n    if (metamaskContextValue.fessContractInstance && metamaskContextValue.fnirContractInstance) {\n      getAllowance();\n      getFessBalance();\n      getFnirBalance();\n    }\n  }, [metamaskContextValue.fessContractInstance, metamaskContextValue.fnirContractInstance]);\n  console.log('allowance: ', allowance);\n  console.log('fessBalance: ', fessBalance);\n  console.log('fnirBalance: ', fnirBalance);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FarmingView, {\n    userApprove: userApprove,\n    setUserApprove: setUserApprove,\n    handleApprove: handleApprove,\n    allowance: allowance,\n    fessBalance: fessBalance,\n    fnirBalance: fnirBalance,\n    userSwap: userSwap,\n    setUserSwap: setUserSwap,\n    handleSwap: handleSwap // global_error = {props.global_error}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 16\n    }\n  })));\n}\n\nconst mapStateToProps = state => ({\n  auth_store: state.auth_store,\n  login_ret: state.auth_store.login_ret,\n  login_loading_flag: state.auth_store.login_loading,\n  global_error_ret: state.global_store.global_error_ret\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  login_loading,\n  global_error,\n  global_error_clr,\n  set_user_data\n})(Farming);","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/Containers/Farming.js"],"names":["React","LoginView","login","login_loading","set_user_data","global_error","global_error_clr","connect","Notif","FarmingView","Footer","MetamaskContext","fessContractAddress","fnirContractAddress","Farming","fnirBalance","getFnirBalance","getFessBalance","fessBalance","metamaskContextValue","useContext","userApprove","setUserApprove","useState","allowance","setAllowance","userSwap","setUserSwap","getAllowance","allowanceValue","fessContractInstance","methods","ethereumAddress","call","Number","Math","pow","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","err","console","log","handleApprove","approveRequest","approve","web3Instance","utils","toWei","String","send","from","to","handleSwap","swapRequest","fnirContractInstance","swapTokens","value","useEffect","mapStateToProps","state","auth_store","login_ret","login_loading_flag","global_error_ret","global_store"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport LoginView from \"../Views/HomeView\"\nimport { login, login_loading } from \"../actions/Auth\"\nimport { set_user_data } from \"../actions/user\"\nimport { global_error, global_error_clr } from \"../actions/global\"\nimport { connect } from 'react-redux';\nimport Notif from '../Components/Notif'\n// import { ReCaptcha } from 'react-recaptcha-v3'\nimport FarmingView from \"../Views/FarmingView\"\nimport Footer from \"../Components/Footer/Index.js\"\n\nimport MetamaskContext from '../contexts/metamask';\n\nimport {\n  fessContractAddress,\n  fnirContractAddress\n} from '../utils/config';\n\nfunction Farming ({fnirBalance, getFnirBalance, getFessBalance, fessBalance  }){\n      const metamaskContextValue = React.useContext(MetamaskContext);\n\n      const [userApprove, setUserApprove] = React.useState(0);\n\n      const [allowance, setAllowance] = React.useState(0);\n\n      const [userSwap, setUserSwap] = React.useState(0);\n\n      const getAllowance = async () => {\n        try {\n          const allowanceValue = await metamaskContextValue.fessContractInstance.methods\n            .allowance(\n              metamaskContextValue.ethereumAddress,\n              fnirContractAddress,\n            )\n            .call();\n\n            setAllowance((\n              Number(allowanceValue) / Math.pow(10, 18)\n            ).toLocaleString(undefined, {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 4,\n            }))\n\n            setUserSwap((\n              Number(allowanceValue) / Math.pow(10, 18)\n            ).toLocaleString(undefined, {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 4,\n            }))\n        } catch (err) {\n          console.log('Farming -> getAllowance: err: ', err);\n        }\n      }\n\n      const handleApprove = async() => {\n        if (Number(userApprove) > 0) {\n          try {\n          const approveRequest = await metamaskContextValue.fessContractInstance.methods\n          .approve(\n            fnirContractAddress,\n            metamaskContextValue.web3Instance.utils.toWei(\n              String(userApprove),\n              'ether',\n            ),\n          )\n          .send({\n            from: metamaskContextValue.ethereumAddress,\n            to: fessContractAddress,\n          });\n\n          console.log('approveRequest: ', approveRequest)\n\n          getAllowance();\n          getFessBalance();\n        getFnirBalance();\n        } catch (err) {\n          console.log('Farming -> handleApprove: err: ', err);\n        }\n        }\n      }\n\n      const handleSwap = async() => {\n        // if (Number(allowance) > 0 && Number(userSwap) > 0  && Number(allowance) >= Number(userSwap)) {\n          try {\n          const swapRequest = await metamaskContextValue.fnirContractInstance.methods\n          .swapTokens(\n            metamaskContextValue.web3Instance.utils.toWei(\n              String(userSwap),\n              'ether',\n            ),\n          )\n          .send({\n            value:  metamaskContextValue.web3Instance.utils.toWei(\n              String(0.1),\n              'ether',\n            ),\n            from: metamaskContextValue.ethereumAddress,\n            to: fnirContractAddress,\n          });\n\n          console.log('swapRequest: ', swapRequest)\n\n          getAllowance();\n          getFessBalance();\n          getFnirBalance();\n        } catch (err) {\n          console.log('Farming -> handleSwap: err: ', err);\n        }\n        // }\n\n      }\n\n      React.useEffect(() => {\n        if (\n          metamaskContextValue.fessContractInstance &&\n          metamaskContextValue.fnirContractInstance\n        ) {\n        getAllowance();\n        getFessBalance();\n        getFnirBalance();\n        }\n      }, [metamaskContextValue.fessContractInstance,\n        metamaskContextValue.fnirContractInstance])\n\n\n      console.log('allowance: ', allowance)\n      console.log('fessBalance: ', fessBalance)\n      console.log('fnirBalance: ', fnirBalance)\n\n        return (\n             <React.Fragment>\n                <div >\n                <FarmingView\n                    userApprove={userApprove}\n                    setUserApprove={setUserApprove}\n                    handleApprove={handleApprove}\n                    allowance={allowance}\n                    fessBalance={fessBalance}\n                    fnirBalance={fnirBalance}\n                    userSwap={userSwap}\n                    setUserSwap={setUserSwap}\n                    handleSwap={handleSwap}\n                    // global_error = {props.global_error}\n                  />\n               <Footer />\n                  {/* <Notif\n                     global_error = {props.global_error}\n                     global_error_ret = {props.global_error_ret}\n                     global_error_clr = {props.global_error_clr}\n                  /> */}\n                </div>\n             </React.Fragment>\n        )\n}\n\nconst mapStateToProps = state => ({\n  auth_store: state.auth_store,\n  login_ret:state.auth_store.login_ret,\n  login_loading_flag:state.auth_store.login_loading,\n  global_error_ret:state.global_store.global_error_ret\n})\n\nexport default connect(mapStateToProps, {\n  login,\n  login_loading,\n  global_error,\n  global_error_clr,\n  set_user_data\n })(Farming)"]},"metadata":{},"sourceType":"module"}