{"ast":null,"code":"var _jsxFileName = \"/home/ajoncode/Rish-hap/ProjectX/src/Views/FarmingView.js\";\nimport React from \"react\";\n\nconst FarmingView = ({\n  ethereumAddress,\n  userApprove,\n  setUserApprove,\n  handleApprove,\n  allowance,\n  fessBalance,\n  fnirBalance,\n  userSwap,\n  setUserSwap,\n  referredEthereum,\n  setReferredEthereum,\n  handleSwap\n}) => {\n  const [invalidReferralAddress, setInvalidReferralAddress] = React.useState(false);\n\n  const submitHandleSwap = () => {\n    console.log('submitHandleSwap: hit.');\n    console.log('(/^0x[a-fA-F0-9]{40}$/g).test(referredEthereum): ', /^0x[a-fA-F0-9]{40}$/g.test(referredEthereum));\n\n    if (/^0x[a-fA-F0-9]{40}$/g.test(referredEthereum)) {\n      setInvalidReferralAddress(false);\n      handleSwap();\n    } else {\n      setInvalidReferralAddress(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"imgLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./reap.png\",\n    alt: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Reap\"), \" FNIR Swapping Fess\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Amount\",\n    value: Number(userApprove).toString(),\n    min: 0,\n    step: 0.0001,\n    style: {\n      fontSize: '15px',\n      fontWeight: 700\n    },\n    onChange: event => setUserApprove(+event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"Note:\"), \"Enter amount to approve\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => handleApprove(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"APPROVE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"zero\",\n    style: {\n      fontSize: '1.9rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }\n  }, \"Total Approved: \")), allowance)), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: Number(userSwap).toString(),\n    min: 0,\n    max: Number(allowance),\n    step: 0.0001,\n    onChange: event => setUserSwap(+event.target.value),\n    style: {\n      fontSize: '15px',\n      fontWeight: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), ethereumAddress && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Referral Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"string\",\n    value: referredEthereum,\n    valid: referredEthereum && /^0x[a-fA-F0-9]{40}$/g.test(referredEthereum) ? true : false,\n    onChange: event => setReferredEthereum(event.target.value),\n    style: {\n      fontSize: '15px',\n      fontWeight: 700\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })), invalidReferralAddress && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 61\n    }\n  }, \"Please enter a valid referral address\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note\",\n    style: {\n      opacity: '.8'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"'\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => submitHandleSwap(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"SWAP\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./fess.png\",\n    alt: \"Fess\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"FESS\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"zero\",\n    style: {\n      fontSize: '1.9rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Available: \"), fessBalance)), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./FNIR LOGO 256x256.png\",\n    alt: \"FNIR\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"FNIR\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"zero\",\n    style: {\n      fontSize: '1.9rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 64\n    }\n  }, \"Available: \"), fnirBalance), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note\",\n    style: {\n      fontFamily: 'normal',\n      marginBottom: '15px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"12% APTR as Reaping Reward\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"disci\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Every time you stake and unstake FESS tokens, the contract will automatically harvest FNIR rewards for you!\"));\n};\n\nexport default FarmingView;","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/Views/FarmingView.js"],"names":["React","FarmingView","ethereumAddress","userApprove","setUserApprove","handleApprove","allowance","fessBalance","fnirBalance","userSwap","setUserSwap","referredEthereum","setReferredEthereum","handleSwap","invalidReferralAddress","setInvalidReferralAddress","useState","submitHandleSwap","console","log","test","Number","toString","fontSize","fontWeight","event","target","value","cursor","opacity","fontFamily","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nconst FarmingView = ({ethereumAddress, userApprove, setUserApprove, handleApprove, allowance, fessBalance, fnirBalance,userSwap, setUserSwap,  referredEthereum, setReferredEthereum,  handleSwap}) => {\n  const [invalidReferralAddress, setInvalidReferralAddress] = React.useState(false);\n  \n  const submitHandleSwap = () => {\n    console.log('submitHandleSwap: hit.')\n    console.log('(/^0x[a-fA-F0-9]{40}$/g).test(referredEthereum): ', (/^0x[a-fA-F0-9]{40}$/g).test(referredEthereum))\n    if ((/^0x[a-fA-F0-9]{40}$/g).test(referredEthereum)) {\n      setInvalidReferralAddress(false);\n      handleSwap();\n    } else {\n      setInvalidReferralAddress(true);\n    }\n  }\n\n    return (<React.Fragment>\n               <div id=\"imgLine\">\n        <img src=\"./reap.png\" alt=\"image\" />\n        <h2><span>Reap</span> FNIR Swapping Fess</h2>\n        {/* <p>\n          Lorem lpsum is simply dummy text of the printing <br />\n          and typesetting industry.\n        </p> */}\n      </div>\n\n      <div id=\"cards\">\n      <div className=\"card\">\n          <input\n          type=\"number\"\n            placeholder=\"Amount\"\n            value={Number(userApprove).toString()}\n            min={0}\n            step={0.0001}\n            style={{ fontSize: '15px', fontWeight: 700 }}\n            onChange={event =>\n              setUserApprove(+event.target.value)\n            }\n          />\n          <div className=\"note\"><span>Note:</span>Enter amount to approve</div>\n          <div className=\"image\">\n            {/* <img src=\"./eth.png\" alt=\"eth\"/> */}\n            {/* <h2>ETH</h2> */}\n            <button type=\"submit\" style={{ cursor: 'pointer' }} onClick={() => handleApprove()}>APPROVE</button>\n          </div>\n\n          <div className=\"zero\" style={{ fontSize: '1.9rem' }}>\n          <div><span>Total Approved: </span></div>\n            {allowance}\n            </div>\n        </div>\n\n        {/* <h1>+</h1> */}\n\n        {/* <div className=\"card\">\n          <input placeholder=\"Amount\"/>\n          <div className=\"note\"><span>Note:</span>In Multiples of 0.5</div>\n          <div className=\"image\">\n            <img src=\"./eth.png\" alt=\"eth\"/>\n            <h2>ETH</h2>\n          </div>\n          <div className=\"zero\">0.000</div>\n          <div className=\"avail\">Available=</div>\n        </div> */}\n\n        <h1>+</h1>\n\n        <div className=\"card\">\n          <input\n          type=\"number\"\n          value={Number(userSwap).toString()}\n            min={0}\n            max={Number(allowance)}\n            step={0.0001}\n            onChange={event =>\n              setUserSwap(+event.target.value)\n            }\n          style={{ fontSize: '15px', fontWeight: 700 }}\n          />\n\n          {\n            ethereumAddress &&\n            <React.Fragment>\n            <div className=\"note\">Referral Address</div>\n            <input\n            type=\"string\"\n            value={referredEthereum}\n            valid={referredEthereum && (/^0x[a-fA-F0-9]{40}$/g).test(referredEthereum) ? true: false }\n            onChange={event =>\n              setReferredEthereum(event.target.value)\n            }\n            style={{ fontSize: '15px', fontWeight: 700 }}\n          />\n          </React.Fragment>\n          }\n\n          {\n            invalidReferralAddress && <div className=\"note\"><span>Please enter a valid referral address</span></div>\n          }\n          \n\n          <div className=\"note\" style={{opacity:'.8'}}>'</div>\n          <button type=\"submit\" style={{ cursor: 'pointer' }} onClick={() => submitHandleSwap()}>SWAP</button>\n          <div className=\"image\">\n            <img src=\"./fess.png\" alt=\"Fess\" />\n            <h2>FESS</h2>\n          </div>\n\n          <div className=\"zero\" style={{ fontSize: '1.9rem' }}  >\n          <span>Available: </span>\n            {fessBalance}\n            </div>\n          {/* <div className=\"avail\">Available</div> */}\n        </div>\n\n        <h1>=</h1>\n\n        <div className=\"card\">\n          {/* <h1>You Get</h1> */}\n          {/* <input/> */}\n          <div className=\"image\">\n            <img src=\"./FNIR LOGO 256x256.png\" alt=\"FNIR\"/>\n            <h2>FNIR</h2>\n          </div>\n          <div className=\"zero\" style={{ fontSize: '1.9rem' }}><span>Available: </span>{fnirBalance}</div>\n          {/* <div className=\"avail\">Available</div> */}\n          <div className=\"note\" style={{fontFamily:'normal', marginBottom:'15px'}}>12% APTR as Reaping Reward</div>\n        </div>\n      </div>\n\n      <div className=\"disci\">\n        Every time you stake and unstake FESS tokens, the contract will\n        automatically harvest FNIR rewards for you!\n      </div>\n\n    </React.Fragment>)\n}\n\nexport default FarmingView"]},"metadata":{},"sourceType":"module"}