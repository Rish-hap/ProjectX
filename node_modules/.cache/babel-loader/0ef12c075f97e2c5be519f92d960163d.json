{"ast":null,"code":"var _jsxFileName = \"/home/ajoncode/Rish-hap/ProjectX/src/Components/Select/index.js\";\nimport React, { Component, PropTypes } from 'react';\nimport AnimatedMount from \"../../HOC/AnimatedMount\";\nimport './index.css';\n\nconst ChevronDown = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"1em\",\n  width: \"1em\",\n  viewBox: \"0 0 10 7\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.08578644,6.5 C1.69526215,6.89052429 1.69526215,7.52368927 2.08578644,7.91421356 C2.47631073,8.30473785 3.10947571,8.30473785 3.5,7.91421356 L8.20710678,3.20710678 L3.5,-1.5 C3.10947571,-1.89052429 2.47631073,-1.89052429 2.08578644,-1.5 C1.69526215,-1.10947571 1.69526215,-0.476310729 2.08578644,-0.0857864376 L5.37867966,3.20710678 L2.08578644,6.5 Z\",\n  transform: \"translate(5.000000, 3.207107) rotate(90.000000) translate(-5.000000, -3.207107) \",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}));\n\nconst ChevronUp = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"1em\",\n  width: \"1em\",\n  viewBox: \"0 0 10 8\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.08578644,7.29289322 C1.69526215,7.68341751 1.69526215,8.31658249 2.08578644,8.70710678 C2.47631073,9.09763107 3.10947571,9.09763107 3.5,8.70710678 L8.20710678,4 L3.5,-0.707106781 C3.10947571,-1.09763107 2.47631073,-1.09763107 2.08578644,-0.707106781 C1.69526215,-0.316582489 1.69526215,0.316582489 2.08578644,0.707106781 L5.37867966,4 L2.08578644,7.29289322 Z\",\n  transform: \"translate(5.000000, 4.000000) rotate(-90.000000) translate(-5.000000, -4.000000) \",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}));\n\nconst X = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"1em\",\n  width: \"1em\",\n  viewBox: \"0 0 16 16\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2 .594l-1.406 1.406.688.719 5.281 5.281-5.281 5.281-.688.719 1.406 1.406.719-.688 5.281-5.281 5.281 5.281.719.688 1.406-1.406-.688-.719-5.281-5.281 5.281-5.281.688-.719-1.406-1.406-.719.688-5.281 5.281-5.281-5.281-.719-.688z\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}));\n\nconst Check = () => /*#__PURE__*/React.createElement(\"svg\", {\n  height: \"1em\",\n  width: \"1em\",\n  viewBox: \"0 0 16 16\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13 .156l-1.406 1.438-5.594 5.594-1.594-1.594-1.406-1.438-2.844 2.844 1.438 1.406 3 3 1.406 1.438 1.406-1.438 7-7 1.438-1.406-2.844-2.844z\",\n  transform: \"translate(0 1)\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}));\n\nclass Select extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: [],\n      focusedValue: -1,\n      isFocused: false,\n      isOpen: false,\n      typed: ''\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onDeleteOption = this.onDeleteOption.bind(this);\n    this.onHoverOption = this.onHoverOption.bind(this);\n    this.onClickOption = this.onClickOption.bind(this);\n    this.renderOption = this.renderOption.bind(this);\n    this.getValue = this.getValue.bind(this);\n  }\n\n  getValue(value) {\n    let val;\n    this.props.options.forEach((item, i) => {\n      if (item.value === value) {\n        val = item.name;\n      }\n    });\n    return val;\n  }\n\n  onFocus() {\n    this.setState({\n      isFocused: true\n    });\n  }\n\n  onBlur() {\n    const {\n      options,\n      multiple\n    } = this.props;\n    this.setState(prevState => {\n      const {\n        values\n      } = prevState;\n\n      if (multiple) {\n        return {\n          focusedValue: -1,\n          isFocused: false,\n          isOpen: false\n        };\n      } else {\n        const value = values[0];\n        let focusedValue = -1;\n\n        if (value) {\n          focusedValue = options.findIndex(option => option.value === value);\n        }\n\n        return {\n          focusedValue,\n          isFocused: false,\n          isOpen: false\n        };\n      }\n    });\n  }\n\n  onKeyDown(e) {\n    const {\n      options,\n      multiple\n    } = this.props;\n    const {\n      isOpen\n    } = this.state;\n\n    switch (e.key) {\n      case ' ':\n        e.preventDefault();\n\n        if (isOpen) {\n          if (multiple) {\n            this.setState(prevState => {\n              const {\n                focusedValue\n              } = prevState;\n\n              if (focusedValue !== -1) {\n                const [...values] = prevState.values;\n                const value = options[focusedValue].value;\n                const index = values.indexOf(value);\n\n                if (index === -1) {\n                  values.push(value);\n                } else {\n                  values.splice(index, 1);\n                }\n\n                return {\n                  values\n                };\n              }\n            });\n          }\n        } else {\n          this.setState({\n            isOpen: true\n          });\n        }\n\n        break;\n\n      case 'Escape':\n      case 'Tab':\n        if (isOpen) {\n          e.preventDefault();\n          this.setState({\n            isOpen: false\n          });\n        }\n\n        break;\n\n      case 'Enter':\n        this.setState(prevState => ({\n          isOpen: !prevState.isOpen\n        }));\n        break;\n\n      case 'ArrowDown':\n        e.preventDefault();\n        this.setState(prevState => {\n          let {\n            focusedValue\n          } = prevState;\n\n          if (focusedValue < options.length - 1) {\n            focusedValue++;\n\n            if (multiple) {\n              return {\n                focusedValue\n              };\n            } else {\n              return {\n                values: [options[focusedValue].value],\n                focusedValue\n              };\n            }\n          }\n        });\n        break;\n\n      case 'ArrowUp':\n        e.preventDefault();\n        this.setState(prevState => {\n          let {\n            focusedValue\n          } = prevState;\n\n          if (focusedValue > 0) {\n            focusedValue--;\n\n            if (multiple) {\n              return {\n                focusedValue\n              };\n            } else {\n              return {\n                values: [options[focusedValue].value],\n                focusedValue\n              };\n            }\n          }\n        });\n        break;\n\n      default:\n        if (/^[a-z0-9]$/i.test(e.key)) {\n          const char = e.key;\n          clearTimeout(this.timeout);\n          this.timeout = setTimeout(() => {\n            this.setState({\n              typed: ''\n            });\n          }, 1000);\n          this.setState(prevState => {\n            const typed = prevState.typed + char;\n            const re = new RegExp(`^${typed}`, 'i');\n            const index = options.findIndex(option => re.test(option.value));\n\n            if (index === -1) {\n              return {\n                typed\n              };\n            }\n\n            if (multiple) {\n              return {\n                focusedValue: index,\n                typed\n              };\n            } else {\n              return {\n                values: [options[index].value],\n                focusedValue: index,\n                typed\n              };\n            }\n          });\n        }\n\n        break;\n    }\n  }\n\n  onClick() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  onDeleteOption(e) {\n    const {\n      value\n    } = e.currentTarget.dataset;\n    this.setState(prevState => {\n      const [...values] = prevState.values;\n      const index = values.indexOf(value);\n      values.splice(index, 1);\n      return {\n        values\n      };\n    });\n  }\n\n  onHoverOption(e) {\n    const {\n      options\n    } = this.props;\n    const {\n      value\n    } = e.currentTarget.dataset;\n    const index = options.findIndex(option => option.value === value);\n    this.setState({\n      focusedValue: index\n    });\n  }\n\n  onClickOption(e) {\n    const {\n      multiple\n    } = this.props;\n    const {\n      value\n    } = e.currentTarget.dataset;\n    this.setState(prevState => {\n      if (!multiple) {\n        let e = {\n          target: {\n            name: this.props.name,\n            value: value\n          }\n        };\n        this.props.handleChange(e);\n        return {\n          values: [value],\n          isOpen: false\n        };\n      }\n\n      return {};\n    });\n  }\n\n  stopPropagation(e) {\n    e.stopPropagation();\n  }\n\n  renderValues() {\n    const {\n      placeholder,\n      multiple\n    } = this.props;\n    const {\n      value\n    } = this.props;\n\n    if (!!value || value === 0) {\n      if (value.length === 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"placeholder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 11\n          }\n        }, placeholder);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: `value ${this.props.value_className}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, this.getValue(value));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }\n      }, placeholder);\n    }\n  }\n\n  renderOptions() {\n    const {\n      options\n    } = this.props;\n    const {\n      isOpen\n    } = this.state;\n\n    if (!!this.props.disabled ? true : !isOpen) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 7\n      }\n    }, options.map(this.renderOption));\n  }\n\n  renderOption(option, index) {\n    const {\n      multiple\n    } = this.props;\n    const {\n      values,\n      focusedValue\n    } = this.state;\n    const {\n      value,\n      name\n    } = option;\n    const selected = values.includes(value);\n    let className = `option ${this.props.option_className}`;\n    if (selected) className += \" selected\";\n    if (index === focusedValue) className += \" focused\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: value,\n      \"data-value\": value,\n      className: className,\n      onMouseOver: this.onHoverOption,\n      onClick: this.onClickOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 7\n      }\n    }, multiple ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }, selected ? /*#__PURE__*/React.createElement(Check, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 26\n      }\n    }) : null) : null, name);\n  }\n\n  render() {\n    const {\n      label\n    } = this.props;\n    const {\n      isOpen\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `select-component-wrapper ${this.props.wrapper_class}`,\n      tabIndex: \"0\",\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onKeyDown: this.onKeyDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.variant === \"no_border\" ? `no_border_select ${this.props.input_text_class}` : `selection ${this.props.input_text_class}`,\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }\n    }, this.renderValues(), /*#__PURE__*/React.createElement(\"span\", {\n      className: !!this.props.arrow_class ? `select-arrow ${this.props.arrow_class}` : 'select-arrow',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }\n    }, isOpen ? /*#__PURE__*/React.createElement(ChevronUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 24\n      }\n    }) : /*#__PURE__*/React.createElement(ChevronDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 40\n      }\n    }))), this.renderOptions());\n  }\n\n}\n\nexport default Select; // export default AnimatedMount({\n//   unmountedStyle: {\n//     opacity: 0,\n//     transform: 'translate3d(0, -2rem, 0)',\n//     transition: 'opacity 100ms ease-out, transform 100ms ease-out',\n//   },\n//   mountedStyle: {\n//     opacity: 1,\n//     transform: 'translate3d(0, 0, 0)',\n//     transition: 'opacity .5s ease-out, transform .5s ease-out',\n//   },\n// })(Select);","map":{"version":3,"sources":["/home/ajoncode/Rish-hap/ProjectX/src/Components/Select/index.js"],"names":["React","Component","PropTypes","AnimatedMount","ChevronDown","ChevronUp","X","Check","Select","constructor","props","state","values","focusedValue","isFocused","isOpen","typed","onFocus","bind","onBlur","onKeyDown","onClick","onDeleteOption","onHoverOption","onClickOption","renderOption","getValue","value","val","options","forEach","item","i","name","setState","multiple","prevState","findIndex","option","e","key","preventDefault","index","indexOf","push","splice","length","test","char","clearTimeout","timeout","setTimeout","re","RegExp","currentTarget","dataset","target","handleChange","stopPropagation","renderValues","placeholder","value_className","renderOptions","disabled","map","selected","includes","className","option_className","render","label","wrapper_class","variant","input_text_class","arrow_class"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport AnimatedMount from \"../../HOC/AnimatedMount\"\nimport './index.css'\n\nconst ChevronDown = () => (\n  <svg height=\"1em\" width=\"1em\" viewBox=\"0 0 10 7\">\n    <path d=\"M2.08578644,6.5 C1.69526215,6.89052429 1.69526215,7.52368927 2.08578644,7.91421356 C2.47631073,8.30473785 3.10947571,8.30473785 3.5,7.91421356 L8.20710678,3.20710678 L3.5,-1.5 C3.10947571,-1.89052429 2.47631073,-1.89052429 2.08578644,-1.5 C1.69526215,-1.10947571 1.69526215,-0.476310729 2.08578644,-0.0857864376 L5.37867966,3.20710678 L2.08578644,6.5 Z\" transform=\"translate(5.000000, 3.207107) rotate(90.000000) translate(-5.000000, -3.207107) \" />\n  </svg>\n)\n\nconst ChevronUp = () => (\n  <svg height=\"1em\" width=\"1em\" viewBox=\"0 0 10 8\">\n    <path d=\"M2.08578644,7.29289322 C1.69526215,7.68341751 1.69526215,8.31658249 2.08578644,8.70710678 C2.47631073,9.09763107 3.10947571,9.09763107 3.5,8.70710678 L8.20710678,4 L3.5,-0.707106781 C3.10947571,-1.09763107 2.47631073,-1.09763107 2.08578644,-0.707106781 C1.69526215,-0.316582489 1.69526215,0.316582489 2.08578644,0.707106781 L5.37867966,4 L2.08578644,7.29289322 Z\" transform=\"translate(5.000000, 4.000000) rotate(-90.000000) translate(-5.000000, -4.000000) \" />\n  </svg>\n)\n\nconst X = () => (\n  <svg height=\"1em\" width=\"1em\" viewBox=\"0 0 16 16\">\n    <path d=\"M2 .594l-1.406 1.406.688.719 5.281 5.281-5.281 5.281-.688.719 1.406 1.406.719-.688 5.281-5.281 5.281 5.281.719.688 1.406-1.406-.688-.719-5.281-5.281 5.281-5.281.688-.719-1.406-1.406-.719.688-5.281 5.281-5.281-5.281-.719-.688z\" />\n  </svg>\n)\n\nconst Check = () => (\n  <svg height=\"1em\" width=\"1em\" viewBox=\"0 0 16 16\">\n    <path d=\"M13 .156l-1.406 1.438-5.594 5.594-1.594-1.594-1.406-1.438-2.844 2.844 1.438 1.406 3 3 1.406 1.438 1.406-1.438 7-7 1.438-1.406-2.844-2.844z\" transform=\"translate(0 1)\" />\n  </svg>\n)\n\nclass Select extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      values: [],\n      focusedValue: -1,\n      isFocused: false,\n      isOpen: false,\n      typed: ''\n    }\n\n    this.onFocus = this.onFocus.bind(this)\n    this.onBlur = this.onBlur.bind(this)\n    this.onKeyDown = this.onKeyDown.bind(this)\n\n    this.onClick = this.onClick.bind(this)\n    this.onDeleteOption = this.onDeleteOption.bind(this)\n    this.onHoverOption = this.onHoverOption.bind(this)\n    this.onClickOption = this.onClickOption.bind(this)\n    this.renderOption = this.renderOption.bind(this)\n    this.getValue = this.getValue.bind(this)\n  }\n\n  getValue(value){\n      let val ;\n      this.props.options.forEach((item, i )=>{\n         if(item.value===value){\n           val = item.name\n         }\n      })\n      return val;\n  }\n\n  onFocus() {\n    this.setState({\n      isFocused: true\n    })\n  }\n\n  onBlur() {\n    const { options, multiple } = this.props\n\n    this.setState(prevState => {\n      const { values } = prevState\n\n      if (multiple) {\n        return {\n          focusedValue: -1,\n          isFocused: false,\n          isOpen: false\n        }\n      } else {\n        const value = values[0]\n\n        let focusedValue = -1\n\n        if (value) {\n          focusedValue = options.findIndex(option => option.value === value)\n        }\n\n        return {\n          focusedValue,\n          isFocused: false,\n          isOpen: false\n        }\n      }\n    })\n  }\n\n  onKeyDown(e) {\n    const { options, multiple } = this.props\n    \n    const { isOpen } = this.state\n\n    switch (e.key) {\n      case ' ':\n        e.preventDefault()\n        if (isOpen) {\n          if (multiple) {\n            this.setState(prevState => {\n              const { focusedValue } = prevState\n\n              if (focusedValue !== -1) {\n                const [ ...values ] = prevState.values\n                const value = options[focusedValue].value\n                const index = values.indexOf(value)\n\n                if (index === -1) {\n                  values.push(value)\n                } else {\n                  values.splice(index, 1)\n                }\n\n                return { values }\n              }\n            })\n          }\n        } else {\n          this.setState({\n            isOpen: true\n          })\n        }\n        break\n      case 'Escape':\n      case 'Tab':\n        if (isOpen) {\n          e.preventDefault()\n          this.setState({\n            isOpen: false\n          })\n        }\n        break\n      case 'Enter':\n        this.setState(prevState => ({\n          isOpen: !prevState.isOpen\n        }))\n        break\n      case 'ArrowDown':\n        e.preventDefault()\n        this.setState(prevState => {\n          let { focusedValue } = prevState\n\n          if (focusedValue < options.length - 1) {\n            focusedValue++\n\n            if (multiple) {\n              return {\n                focusedValue\n              }\n            } else {\n              return {\n                values: [ options[focusedValue].value ],\n                focusedValue\n              }\n            }\n          }\n        })\n        break\n      case 'ArrowUp':\n        e.preventDefault()\n        this.setState(prevState => {\n          let { focusedValue } = prevState\n\n          if (focusedValue > 0) {\n            focusedValue--\n\n            if (multiple) {\n              return {\n                focusedValue\n              }\n            } else {\n              return {\n                values: [ options[focusedValue].value ],\n                focusedValue\n              }\n            }\n          }\n        })\n        break\n      default:\n        if (/^[a-z0-9]$/i.test(e.key)) {\n          const char = e.key\n\n          clearTimeout(this.timeout)\n          this.timeout = setTimeout(() => {\n            this.setState({\n              typed: ''\n            })\n          }, 1000)\n\n          this.setState(prevState => {\n            const typed = prevState.typed + char\n            const re = new RegExp(`^${typed}`, 'i')\n            const index = options.findIndex(option => re.test(option.value))\n\n            if (index === -1) {\n              return {\n                typed\n              }\n            }\n\n            if (multiple) {\n              return {\n                focusedValue: index,\n                typed\n              }\n            } else {\n              return {\n                values: [ options[index].value ],\n                focusedValue: index,\n                typed\n              }\n            }\n          })\n        }\n        break\n    }\n  }\n\n  onClick() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }))\n  }\n\n  onDeleteOption(e) {\n    const { value } = e.currentTarget.dataset\n\n    this.setState(prevState => {\n      const [ ...values ] = prevState.values\n      const index = values.indexOf(value)\n\n      values.splice(index, 1)\n\n      return { values }\n    })\n  }\n\n  onHoverOption(e) {\n    const { options } = this.props\n\n    const { value } = e.currentTarget.dataset\n    const index = options.findIndex(option => option.value === value)\n\n    this.setState({\n      focusedValue: index\n    })\n  }\n\n  onClickOption(e) {\n    const { multiple } = this.props\n\n    const { value } = e.currentTarget.dataset\n\n    this.setState(prevState => {\n      if (!multiple) {\n        let e = {\n          target:{\n            name:this.props.name,\n            value:value\n      }\n        }\n          this.props.handleChange(e)\n        return {\n          values: [ value ],\n          isOpen: false\n        }\n      }\n      return {\n\n      }\n    });\n  }\n\n  stopPropagation(e) {\n    e.stopPropagation()\n  }\n\n  renderValues() {\n    const { placeholder, multiple } = this.props\n    const { value } = this.props\n    if((!!value)|| (value===0)){\n      if (value.length === 0) {\n        return (\n          <div className=\"placeholder\">\n            { placeholder }\n          </div>\n        )\n      }\n\n      return (\n        <div className={`value ${this.props.value_className}`}>\n          {\n            this.getValue(value)\n            }\n        </div>\n      )\n    }else{\n      return (\n        <div className=\"value\">\n          { placeholder }\n        </div>\n      )\n    }\n\n  }\n\n  renderOptions() {\n    const { options } = this.props\n    const { isOpen } = this.state;\n\n    if (!!this.props.disabled?true:!isOpen) {\n      return null\n    }\n\n    return (\n      <div className=\"options\">\n        { options.map(this.renderOption) }\n      </div>\n    )\n  }\n\n  renderOption(option, index) {\n    const { multiple } = this.props\n    const { values, focusedValue } = this.state\n\n    const { value, name } = option\n\n    const selected = values.includes(value)\n\n    let className = `option ${this.props.option_className}`\n    if (selected) className += \" selected\"\n    if (index === focusedValue) className += \" focused\"\n\n    return (\n      <div\n        key={ value }\n        data-value={ value }\n        className={ className }\n        onMouseOver={ this.onHoverOption }\n        onClick={ this.onClickOption }\n        >\n        { multiple ?\n          <span className=\"checkbox\">\n            { selected ? <Check /> : null }\n          </span> :\n          null\n        }\n        { name }\n      </div>\n    )\n  }\n\n  render() {\n    const { label } = this.props\n    const { isOpen } = this.state\n\n    return (\n      <div\n        className={`select-component-wrapper ${this.props.wrapper_class}`}\n        tabIndex=\"0\"\n        onFocus={ this.onFocus }\n        onBlur={ this.onBlur }\n        onKeyDown={ this.onKeyDown }\n      >\n      {\n          // <label className=\"label\">{ label }</label>\n      }\n        <div \n        className={this.props.variant===\"no_border\"?`no_border_select ${this.props.input_text_class}`:`selection ${this.props.input_text_class}`} onClick={ this.onClick }>\n          { this.renderValues() }\n          <span className={!!this.props.arrow_class?`select-arrow ${this.props.arrow_class}`:'select-arrow'}>\n            { isOpen ? <ChevronUp /> : <ChevronDown /> }\n          </span>\n        </div>\n        { this.renderOptions() }\n      </div>\n    )\n  }\n}\n\nexport default Select\n\n// export default AnimatedMount({\n//   unmountedStyle: {\n//     opacity: 0,\n//     transform: 'translate3d(0, -2rem, 0)',\n//     transition: 'opacity 100ms ease-out, transform 100ms ease-out',\n//   },\n//   mountedStyle: {\n//     opacity: 1,\n//     transform: 'translate3d(0, 0, 0)',\n//     transition: 'opacity .5s ease-out, transform .5s ease-out',\n//   },\n// })(Select);"]},"metadata":{},"sourceType":"module"}