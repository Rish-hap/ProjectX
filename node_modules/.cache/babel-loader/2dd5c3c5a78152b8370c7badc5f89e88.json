{"ast":null,"code":"import _regeneratorRuntime from\"/home/ajoncode/crypticocean-projects/fesschain/ProjectX/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(get_user_saga);import{call,put,takeEvery,takeLatest}from'redux-saga/effects';import{GET_USER}from'../Constants';import{get_user_ret,get_user_loading}from'../actions/user';import api from'../utils/api_routes';import{get_url_params}from\"../utils/common_utilities\";import store from'../store';console.log(store,\"store in saga file\");// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction get_user_saga(){var data,headers,api_data;return _regeneratorRuntime.wrap(function get_user_saga$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"Inside get_user_saga\");_context.prev=1;_context.next=4;return store.getState().user_store.get_user;case 4:data=_context.sent;headers={headers:{Authorization:\"bearer \".concat(localStorage.getItem('token'))}};_context.next=8;return call(api.user.get_user,headers);case 8:api_data=_context.sent;console.log(api_data,\"api_data in get_usersaga\");if(!api_data){_context.next=18;break;}if(!api_data.success){_context.next=16;break;}_context.next=14;return put(get_user_ret({success:true,message:api_data.message||\"User successfully fetched\",data:api_data.data}));case 14:_context.next=18;break;case 16:_context.next=18;return put(get_user_ret({success:false,message:api_data.message||'Something went wrong try again later..',data:[]}));case 18:_context.next=32;break;case 20:_context.prev=20;_context.t0=_context[\"catch\"](1);console.log(_context.t0,\"e in get_act insigt saga\");_context.prev=23;_context.next=26;return put(get_user_ret({success:false,message:'Something went wrong try again later..',data:[]}));case 26:_context.next=32;break;case 28:_context.prev=28;_context.t1=_context[\"catch\"](23);_context.next=32;return put(get_user_loading({success:false,message:'Something went wrong try again later..',data:[]}));case 32:case\"end\":return _context.stop();}}},_marked,null,[[1,20],[23,28]]);}export var user_saga=[takeLatest(GET_USER,get_user_saga)];export default user_saga;","map":{"version":3,"sources":["/home/ajoncode/crypticocean-projects/fesschain/ProjectX/src/Sagas/user_saga.js"],"names":["get_user_saga","call","put","takeEvery","takeLatest","GET_USER","get_user_ret","get_user_loading","api","get_url_params","store","console","log","getState","user_store","get_user","data","headers","Authorization","localStorage","getItem","user","api_data","success","message","user_saga"],"mappings":"uNAUUA,a,EAVV,OAASC,IAAT,CAAeC,GAAf,CAAoBC,SAApB,CAA+BC,UAA/B,KAAiD,oBAAjD,CACA,OAAUC,QAAV,KAA0B,cAA1B,CACA,OAASC,YAAT,CAAuBC,gBAAvB,KAA+C,iBAA/C,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,OAASC,cAAT,KAA+B,2BAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CAEAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAkB,oBAAlB,EAEA;AACA,QAAUV,CAAAA,aAAV,mJACIW,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADJ,gCAIoB,MAAMF,CAAAA,KAAK,CAACG,QAAN,GAAiBC,UAAjB,CAA4BC,QAAlC,CAJpB,OAIaC,IAJb,eAKYC,OALZ,CAKsB,CACbA,OAAO,CAAE,CACPC,aAAa,kBAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ,CADN,CADI,CALtB,iBAUwB,MAAMnB,CAAAA,IAAI,CAACO,GAAG,CAACa,IAAJ,CAASN,QAAV,CAAqBE,OAArB,CAAV,CAVxB,OAUaK,QAVb,eAWMX,OAAO,CAACC,GAAR,CAAYU,QAAZ,CAAqB,0BAArB,EAXN,GAYU,CAACA,QAZX,8BAaYA,QAAQ,CAACC,OAbrB,2CAcY,MAAMrB,CAAAA,GAAG,CAACI,YAAY,CAAC,CACnBiB,OAAO,CAAC,IADW,CAEnBC,OAAO,CAACF,QAAQ,CAACE,OAAT,EAAoB,2BAFT,CAGnBR,IAAI,CAACM,QAAQ,CAACN,IAHK,CAAD,CAAb,CAAT,CAdZ,wDAoBY,MAAMd,CAAAA,GAAG,CAACI,YAAY,CAAC,CACnBiB,OAAO,CAAC,KADW,CAEnBC,OAAO,CAACF,QAAQ,CAACE,OAAT,EAAmB,wCAFR,CAGnBR,IAAI,CAAC,EAHc,CAAD,CAAb,CAAT,CApBZ,yFA4BIL,OAAO,CAACC,GAAR,aAAc,0BAAd,EA5BJ,kCA8BQ,MAAMV,CAAAA,GAAG,CAACI,YAAY,CAAC,CACnBiB,OAAO,CAAC,KADW,CAEnBC,OAAO,CAAC,wCAFW,CAGnBR,IAAI,CAAC,EAHc,CAAD,CAAb,CAAT,CA9BR,2GAoCQ,MAAMd,CAAAA,GAAG,CAACK,gBAAgB,CAAC,CACvBgB,OAAO,CAAC,KADe,CAEvBC,OAAO,CAAC,wCAFe,CAGvBR,IAAI,CAAC,EAHkB,CAAD,CAAjB,CAAT,CApCR,6EA+CA,MAAO,IAAMS,CAAAA,SAAS,CAAG,CACtBrB,UAAU,CAACC,QAAD,CAAWL,aAAX,CADY,CAAlB,CAIP,cAAeyB,CAAAA,SAAf","sourcesContent":["import { call, put, takeEvery, takeLatest } from 'redux-saga/effects'\nimport {  GET_USER } from '../Constants'\nimport { get_user_ret, get_user_loading } from '../actions/user'\nimport api from '../utils/api_routes'\nimport { get_url_params } from \"../utils/common_utilities\"\nimport store from '../store'\n\nconsole.log(store,\"store in saga file\")\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* get_user_saga() {\n    console.log(\"Inside get_user_saga\")\n\n   try {\n      const  data = yield store.getState().user_store.get_user\n      const headers = {\n         headers: {\n           Authorization: `bearer ${localStorage.getItem('token')}`,\n         },\n       }\n       const api_data = yield call(api.user.get_user,  headers)\n      console.log(api_data,\"api_data in get_usersaga\")\n      if(!!api_data){\n         if(api_data.success){\n            yield put(get_user_ret({\n                success:true,\n                message:api_data.message || \"User successfully fetched\",\n                data:api_data.data\n               }))\n        }else{\n            yield put(get_user_ret({\n                success:false,\n                message:api_data.message ||'Something went wrong try again later..',\n                data:[]\n               }))\n        }\n      }\n   } catch (e) {\n    console.log(e,\"e in get_act insigt saga\")\n    try{\n        yield put(get_user_ret({\n            success:false,\n            message:'Something went wrong try again later..',\n            data:[]\n           }))\n      }catch(x){\n        yield put(get_user_loading({\n            success:false,\n            message:'Something went wrong try again later..',\n            data:[]\n           }))\n        }\n   }\n}\n\n\n\nexport const user_saga = [\n   takeLatest(GET_USER, get_user_saga)\n]\n\nexport default user_saga"]},"metadata":{},"sourceType":"module"}